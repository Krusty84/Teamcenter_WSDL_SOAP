<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="f0be5209-25bb-4b93-b03e-590fcca0c663" activeEnvironment="Default" name="Teamcenter12.4_Connect_viaWSDL" resourceRoot="" soapui-version="5.6.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:description>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20211115998342447.services_reference/custom/?audience=external
</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="ManipulationsWithTeamcenter"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="Login_and_getGroupInfo"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="0d92607b-6c69-4f70-965d-752fd131960b" wsaVersion="NONE" name="Core0603SessionSoapBinding" type="wsdl" bindingName="{http://teamcenter.com/Services/Core/2006-03}Core0603SessionSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Temp/wsdls/Core0603SessionService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\C:\Temp\wsdls\Core0603SessionService.wsdl"><con:part><con:url>file:\C:\Temp\wsdls\Core0603SessionService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://teamcenter.com/Services/Core/2006-03" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsi="http://ws-i.org/schemas/conformanceClaim/" xmlns:imp0="http://teamcenter.com/Schemas/Soa/2006-03/Base" xmlns:imp1="http://teamcenter.com/Schemas/Soa/2006-03/Exceptions" xmlns:imp2="http://teamcenter.com/Schemas/Core/2006-03/Session" xmlns:imp3="http://teamcenter.com/webservices/2005-06/schemas/WSFaults" xmlns:tns="http://teamcenter.com/Services/Core/2006-03">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://teamcenter.com/Schemas/Soa/2006-03/Base" schemaLocation="SoaBase.xsd"/>
      <xs:import namespace="http://teamcenter.com/Schemas/Soa/2006-03/Exceptions" schemaLocation="SoaExceptions.xsd"/>
      <xs:import namespace="http://teamcenter.com/Schemas/Core/2006-03/Session" schemaLocation="Core0603Session.xsd"/>
      <xs:import namespace="http://teamcenter.com/webservices/2005-06/schemas/WSFaults" schemaLocation="WSFaults.xsd"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="InternalServerFaultFault">
    <wsdl:part name="exx01" element="imp1:InternalServerFault"/>
  </wsdl:message>
  <wsdl:message name="ServiceFaultFault">
    <wsdl:part name="exx02" element="imp1:ServiceFault"/>
  </wsdl:message>
  <wsdl:message name="InvalidUserFaultFault">
    <wsdl:part name="exx03" element="imp1:InvalidUserFault"/>
  </wsdl:message>
  <wsdl:message name="getPreferencesRequest">
    <wsdl:part name="in0" element="imp2:GetPreferencesInput"/>
  </wsdl:message>
  <wsdl:message name="getPreferencesResponse">
    <wsdl:part name="out" element="imp2:PreferencesResponse"/>
  </wsdl:message>
  <wsdl:message name="setPreferencesRequest">
    <wsdl:part name="in0" element="imp2:SetPreferencesInput"/>
  </wsdl:message>
  <wsdl:message name="setPreferencesResponse">
    <wsdl:part name="out" element="imp2:PreferencesResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvailableServicesRequest">
    <wsdl:part name="in0" element="imp2:GetAvailableServicesInput"/>
  </wsdl:message>
  <wsdl:message name="getAvailableServicesResponse">
    <wsdl:part name="out" element="imp2:GetAvailableServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="getGroupMembershipRequest">
    <wsdl:part name="in0" element="imp2:GetGroupMembershipInput"/>
  </wsdl:message>
  <wsdl:message name="getGroupMembershipResponse">
    <wsdl:part name="out" element="imp2:GetGroupMembershipResponse"/>
  </wsdl:message>
  <wsdl:message name="getSessionGroupMemberRequest">
    <wsdl:part name="in0" element="imp2:GetSessionGroupMemberInput"/>
  </wsdl:message>
  <wsdl:message name="getSessionGroupMemberResponse">
    <wsdl:part name="out" element="imp2:GetSessionGroupMemberResponse"/>
  </wsdl:message>
  <wsdl:message name="InvalidCredentialsFaultFault">
    <wsdl:part name="exx01" element="imp1:InvalidCredentialsFault"/>
  </wsdl:message>
  <wsdl:message name="loginRequest">
    <wsdl:part name="in0" element="imp2:LoginInput"/>
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part name="out" element="imp2:LoginResponse"/>
  </wsdl:message>
  <wsdl:message name="loginSSORequest">
    <wsdl:part name="in0" element="imp2:LoginSSOInput"/>
  </wsdl:message>
  <wsdl:message name="loginSSOResponse">
    <wsdl:part name="out" element="imp2:LoginResponse"/>
  </wsdl:message>
  <wsdl:message name="logoutRequest">
    <wsdl:part name="in0" element="imp2:LogoutInput"/>
  </wsdl:message>
  <wsdl:message name="logoutResponse">
    <wsdl:part name="out" element="imp0:ServiceData"/>
  </wsdl:message>
  <wsdl:message name="setSessionGroupMemberRequest">
    <wsdl:part name="in0" element="imp2:SetSessionGroupMemberInput"/>
  </wsdl:message>
  <wsdl:message name="setSessionGroupMemberResponse">
    <wsdl:part name="out" element="imp0:ServiceData"/>
  </wsdl:message>
  <wsdl:portType name="Core0603Session">
    <wsdl:operation name="getPreferences">
      <wsdl:documentation>Get preference values.&lt;br />&lt;br />&lt;b>Teamcenter Component:&lt;/b>&lt;br />Preference Management - Provides the capability to store and manage both system and user prefrences that are used to tune the system based on the settings. Typically these consist of name value pairs that the code looks up at runtime to configure the behavior.</wsdl:documentation>
      <wsdl:input message="tns:getPreferencesRequest" name="getPreferencesRequest"/>
      <wsdl:output message="tns:getPreferencesResponse" name="getPreferencesResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:ServiceFaultFault" name="ServiceFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="setPreferences">
      <wsdl:documentation>Set preference values.&lt;br />&lt;br />&lt;b>Teamcenter Component:&lt;/b>&lt;br />Preference Management - Provides the capability to store and manage both system and user prefrences that are used to tune the system based on the settings. Typically these consist of name value pairs that the code looks up at runtime to configure the behavior.</wsdl:documentation>
      <wsdl:input message="tns:setPreferencesRequest" name="setPreferencesRequest"/>
      <wsdl:output message="tns:setPreferencesResponse" name="setPreferencesResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:ServiceFaultFault" name="ServiceFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableServices">
      <wsdl:documentation>This operation returns a list of services and service operations that this Teamcenter server instance supports. This is useful for client applications that expose different functionality based on the version of the Teamcenter server it is connecting to.&lt;br />&lt;br />&lt;b>Teamcenter Component:&lt;/b>&lt;br />SOA Framework - The framework to expose the Teamcenter services to the clients.  The framework provices the means to define service interfaces (through BMIDE) and exposes those in Java, C++, C# client bindings. The Session service is part of the framework.</wsdl:documentation>
      <wsdl:input message="tns:getAvailableServicesRequest" name="getAvailableServicesRequest"/>
      <wsdl:output message="tns:getAvailableServicesResponse" name="getAvailableServicesResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="getGroupMembership">
      <wsdl:documentation>Get the valid groups and roles for the current user.&lt;br />&lt;br />&lt;b>Teamcenter Component:&lt;/b>&lt;br />SOA Framework - The framework to expose the Teamcenter services to the clients.  The framework provices the means to define service interfaces (through BMIDE) and exposes those in Java, C++, C# client bindings. The Session service is part of the framework.</wsdl:documentation>
      <wsdl:input message="tns:getGroupMembershipRequest" name="getGroupMembershipRequest"/>
      <wsdl:output message="tns:getGroupMembershipResponse" name="getGroupMembershipResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:ServiceFaultFault" name="ServiceFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="getSessionGroupMember">
      <wsdl:documentation><![CDATA[Get the <b>Group</b> and <b>Role</b> for the current session. The group and role are set at login, either to default values or as specified by the input arguments to the login operation. The group and role can be changed at any time throughout the session through the <font face=&quot;courier&quot; height=&quot;10&quot;>setSessionGroupMember</font> or <font face=&quot;courier&quot; height=&quot;10&quot;>setUserSessionState</font> operations.<br /><br /><b>Dependencies:</b><br />setSessionGroupMember<br /><br /><b>Teamcenter Component:</b><br />SOA Framework - The framework to expose the Teamcenter services to the clients.  The framework provices the means to define service interfaces (through BMIDE) and exposes those in Java, C++, C# client bindings. The Session service is part of the framework.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:getSessionGroupMemberRequest" name="getSessionGroupMemberRequest"/>
      <wsdl:output message="tns:getSessionGroupMemberResponse" name="getSessionGroupMemberResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:ServiceFaultFault" name="ServiceFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdl:documentation><![CDATA[Authenticates the user's credentials and initialize a Teamcenter session for this client. The operation will throw an <font face="courier" height="10">InvalidCredentialsException</font> if the <font face="courier" height="10">username</font>, <font face="courier" height="10">password</font> or <font face="courier" height="10">group</font> is not valid.<br />When the client application is deployed to a 4Tier environment (communication through HTTP or TCCS) the login operation also contributes to the assignment of a Teamcenter server instance to the client session. The Teamcenter architecture varies from other client server architectures in that there is a dedicated instance of the Teamcenter server per client application. However, there are use cases where it is desirable for a single user to have multiple desktop applications running and each sharing a single instance of a Teamcenter server. This is controlled through the following elements:<br /><ul><ul><li type="disc"><font face="courier" height="10">hostPath</font>&nbsp;&nbsp;&nbsp;&nbsp;From the Connection class constructor, this specifies  the address (URI) the Teamcenter server is hosted on.</li><li type="disc"><font face="courier" height="10">username</font>&nbsp;&nbsp;&nbsp;&nbsp;From this login operation, this specifies the user's Teamcenter user name.</li><li type="disc"><font face="courier" height="10">sessionDiscriminator</font>&nbsp;&nbsp;&nbsp;&nbsp;From this login operation, this identifies the client session.</li></ul></ul><br /><br />The <font face="courier" height="10">hostPath</font> argument determines the server machine that the client connects to. Once there, the pool manager on that host uses the <font face="courier" height="10">username</font> and <font face="courier" height="10">sessionDiscriminator</font> arguments of the logon request to determine which Teamcenter server instance to assign the client to. If the pool manager has an existing Teamcenter server instance with the <font face="courier" height="10">username</font>/<font face="courier" height="10">sessionDiscriminator</font> key, the client is assigned to that existing instance of the Teamcenter server, and therefore sharing the server with another client; otherwise, a new instance of the Teamcenter server is used. There are a few general scenarios for the <font face="courier" height="10">sessionDiscriminator</font> argument:<br /><br /><ul><ul><li type="disc">Blank &nbsp;&nbsp;&nbsp;&nbsp;If the user <i>jdoe</i> logs on to Teamcenter using two or more client applications using a blank <font face="courier" height="10">sessionDiscriminator</font> argument (for example, <i>jdoe</i>/ ), all of those clients are assigned to the same Teamcenter server instance. These client applications can be running on the same or different client hosts.</li><li type="disc">Constant &nbsp;&nbsp;&nbsp;&nbsp;If the user <i>jdoe</i> logs on to Teamcenter using two or more client applications using a constant or fixed <font face="courier" height="10">sessionDiscriminator</font> argument (for example, <i>jdoe</i>/<i>MyApp</i> ), those clients are assigned to the same Teamcenter server instance. This is similar to the blank <font face="courier" height="10">sessionDiscriminator</font> argument; the difference is that only multiple instances of the client application using <i>myApp</i> started by <i>jdoe</i> share the same Teamcenter server instance.</li><li type="disc">Unique &nbsp;&nbsp;&nbsp;&nbsp;If the user <i>jdoe</i> logs on using a unique random-generated string (for example, <i>jdoe</i>/<i>akdk938lakc</i>), the client application will be assigned to a dedicated instance of the Teamcenter server.</li></ul></ul><br /> <br />The scenario you use depends on how your client application is used in the integrated environment. The most common case is the unique <font face="courier" height="10">sessionDiscriminator</font> value.<br /><br /><b>Teamcenter Component:</b><br />SOA Framework - The framework to expose the Teamcenter services to the clients.  The framework provices the means to define service interfaces (through BMIDE) and exposes those in Java, C++, C# client bindings. The Session service is part of the framework.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:loginRequest" name="loginRequest"/>
      <wsdl:output message="tns:loginResponse" name="loginResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidCredentialsFaultFault" name="InvalidCredentialsFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="loginSSO">
      <wsdl:documentation><![CDATA[Authenticates the user using Single-Sign-On (SSO) credentials and initialize a Teamcenter session for this client. The <font face="courier" height="10">username</font> and <font face="courier" height="10">ssoCredentials</font> arguments must be obtained from Teamcenter's Security Services. The <font face="courier" height="10">SsoCredentials</font> class offers a simple API to get these values. The operation will throw an <font face="courier" height="10">InvalidCredentialsException</font> if the <font face="courier" height="10">username</font>, <font face="courier" height="10">ssoCredentials</font> or group is not valid.<br />When the client application is deployed to a 4Tier environment (communication through HTTP or TCCS) the login operation also contributes to the assignment of a Teamcenter server instance to the client session. The Teamcenter architecture varies from other client server architectures in that there is a dedicated instance of the Teamcenter server per client application. However, there are use cases where it is desirable for a single user to have multiple desktop applications running and each sharing a single instance of a Teamcenter server. This is controlled through the following elements:<br /><ul><ul><li type="disc"><font face="courier" height="10">hostPath</font>&nbsp;&nbsp;&nbsp;&nbsp;From the Connection class constructor, this specifies  the address (URI) the Teamcenter server is hosted on.</li><li type="disc"><font face="courier" height="10">username</font>&nbsp;&nbsp;&nbsp;&nbsp;From this login operation, this specifies the user's Teamcenter user name.</li><li type="disc"><font face="courier" height="10">sessionDiscriminator</font>&nbsp;&nbsp;&nbsp;&nbsp;From this login operation, this identifies the client session.</li></ul></ul><br /><br />The <font face="courier" height="10">hostPath</font> argument determines the server machine that the client connects to. Once there, the pool manager on that host uses the <font face="courier" height="10">username</font> and <font face="courier" height="10">sessionDiscriminator</font> arguments of the logon request to determine which Teamcenter server instance to assign the client to. If the pool manager has an existing Teamcenter server instance with the <font face="courier" height="10">username</font>/<font face="courier" height="10">sessionDiscriminator</font> key, the client is assigned to that existing instance of the Teamcenter server, and therefore sharing the server with another client; otherwise, a new instance of the Teamcenter server is used. There are a few general scenarios for the sessionDiscriminator argument:<br /><br /><ul><ul><li type="disc">Blank &nbsp;&nbsp;&nbsp;&nbsp;If the user jdoe logs on to Teamcenter using two or more client applications using a blank <font face="courier" height="10">sessionDiscriminator</font> argument (for example, <i>jdoe</i>/ ), all of those clients are assigned to the same Teamcenter server instance. These client applications can be running on the same or different client hosts.</li><li type="disc">Constant &nbsp;&nbsp;&nbsp;&nbsp;If the user jdoe logs on to Teamcenter using two or more client applications using a constant or fixed <font face="courier" height="10">sessionDiscriminator</font> argument (for example, <i>jdoe</i>/<i>MyApp</i> ), those clients are assigned to the same Teamcenter <font face="courier" height="10">server</font> instance. This is similar to the blank sessionDiscriminator argument; the difference is that only multiple instances of the client application using myApp started by jdoe share the same Teamcenter server instance.</li><li type="disc">Unique &nbsp;&nbsp;&nbsp;&nbsp;If the user jdoe logs on using a unique random-generated string (for example, <i>jdoe</i>/<i>akdk938lakc</i>), the client application will be assigned to a dedicated instance of the Teamcenter server.</li></ul></ul><br /> <br />The scenario you use depends on how your client application is used in the integrated environment. The most common case is the unique <font face="courier" height="10">sessionDiscriminator</font> value.<br /><br /><b>Teamcenter Component:</b><br />SOA Framework - The framework to expose the Teamcenter services to the clients.  The framework provices the means to define service interfaces (through BMIDE) and exposes those in Java, C++, C# client bindings. The Session service is part of the framework.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:loginSSORequest" name="loginSSORequest"/>
      <wsdl:output message="tns:loginSSOResponse" name="loginSSOResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidCredentialsFaultFault" name="InvalidCredentialsFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <wsdl:documentation><![CDATA[Logout and terminate the Teamcenter session. If the Teamcenter server is being shared with multiple client applications, it will not be terminated until each client has issued the <font face="courier" height="10">logout</font>.<br /><br /><br /><b>Teamcenter Component:</b><br />SOA Framework - The framework to expose the Teamcenter services to the clients.  The framework provices the means to define service interfaces (through BMIDE) and exposes those in Java, C++, C# client bindings. The Session service is part of the framework.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:logoutRequest" name="logoutRequest"/>
      <wsdl:output message="tns:logoutResponse" name="logoutResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:ServiceFaultFault" name="ServiceFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="setSessionGroupMember">
      <wsdl:documentation><![CDATA[Set the <b>Group</b> and <b>Role</b> for the current session. The group and role are set at login, either to default values or as specified by the input arguments to the login operation. The group and role can be changed at any time throughout the session through this operation or the <font face="courier" height="10">setUserSessionState</font> operations. The <font face="courier" height="10">getSessionGroupMember</font> will return the current group and roll.<br /><br /><b>Dependencies:</b><br />getSessionGroupMember<br /><br /><b>Teamcenter Component:</b><br />SOA Framework - The framework to expose the Teamcenter services to the clients.  The framework provices the means to define service interfaces (through BMIDE) and exposes those in Java, C++, C# client bindings. The Session service is part of the framework.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:setSessionGroupMemberRequest" name="setSessionGroupMemberRequest"/>
      <wsdl:output message="tns:setSessionGroupMemberResponse" name="setSessionGroupMemberResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:ServiceFaultFault" name="ServiceFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="Core0603SessionSoapBinding" type="tns:Core0603Session">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getPreferences">
      <soap:operation style="document" soapAction="getPreferences"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceFaultError">
        <soap:fault name="ServiceFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPreferences">
      <soap:operation style="document" soapAction="setPreferences"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceFaultError">
        <soap:fault name="ServiceFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableServices">
      <soap:operation style="document" soapAction="getAvailableServices"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroupMembership">
      <soap:operation style="document" soapAction="getGroupMembership"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceFaultError">
        <soap:fault name="ServiceFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSessionGroupMember">
      <soap:operation style="document" soapAction="getSessionGroupMember"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceFaultError">
        <soap:fault name="ServiceFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap:operation style="document" soapAction="login"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCredentialsFaultError">
        <soap:fault name="InvalidCredentialsFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loginSSO">
      <soap:operation style="document" soapAction="loginSSO"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCredentialsFaultError">
        <soap:fault name="InvalidCredentialsFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <soap:operation style="document" soapAction="logout"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceFaultError">
        <soap:fault name="ServiceFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSessionGroupMember">
      <soap:operation style="document" soapAction="setSessionGroupMember"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceFaultError">
        <soap:fault name="ServiceFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Core0603SessionService">
    <wsdl:port binding="tns:Core0603SessionSoapBinding" name="Core-2006-03-Session">
      <soap:address location="http://localhost:80/PTierApp/WebServices/Core-2006-03-Session"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\Temp\wsdls\SoaBase.xsd</con:url><con:content><![CDATA[<!--@<COPYRIGHT>@
  ==================================================
  Copyright 2012
  Siemens Product Lifecycle Management Software Inc.
  All Rights Reserved.
  ==================================================
  @<COPYRIGHT>@-->
<xs:schema targetNamespace="http://teamcenter.com/Schemas/Soa/2006-03/Base" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://teamcenter.com/Schemas/Soa/2006-03/Base">
  <xs:annotation>
    <xs:documentation>This package defines the base types used in services defined under the 
        Teamcenter SOA Framework.</xs:documentation>
  </xs:annotation>
  <xs:element name="ObjectPropertyPolicy">
    <xs:complexType>
      <xs:annotation>
        <xs:documentation>This allows the client application to set the Object property Policy.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="modifiers" type="tns:Modifiers" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="types" type="tns:PolicyType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="useRefCount" type="xs:boolean" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PolicyType">
    <xs:sequence>
      <xs:element name="modifiers" type="tns:Modifiers" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="properties" type="tns:PolicyProperty" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="PolicyProperty">
    <xs:sequence>
      <xs:element name="modifiers" type="tns:Modifiers" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="Modifiers">
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="Value" type="xs:string" use="required"/>
  </xs:complexType>
  <!--Only Elements may be used as service input or output arguments-->
  <xs:element name="ServiceData">
    <xs:complexType>
      <xs:annotation>
        <xs:documentation>The ServiceData type is used to return Teamcenter Model object. 
            Teamcenter Model objects are organized in 4 lists, 'updatedObjs', 'deletedObjs',
            'createdObjs', and 'plainObjs'. The ServiceData type also allows partial
            errors to be returned.
            As of Teamcenter 9.1.2 and 10.1(??) the 'updated', 'deleted', 'created', and 'plain' arrays are used
            with each element in the array being the UID of the object.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="updatedObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="deletedObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="createdObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="childChangeObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="plainObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="updated" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="deleted" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="created" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="childChange" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="plain" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="dataObjects" type="tns:ModelObject" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="modelObjects" type="tns:ObjectMap" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:appinfo>
              <xjb4c-type>hashmap</xjb4c-type>
            </xs:appinfo>
          </xs:annotation>
        </xs:element>
        <xs:element name="partialErrors" type="tns:ErrorStack" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="PartialErrors">
    <xs:complexType>
      <xs:annotation>
        <xs:documentation>The ServiceException type is used to return an error from a service.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="errors" type="tns:ErrorStack" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ModelSchema">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="types" type="tns:ModelType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="classes" type="tns:ModelClass" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Preferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="prefs" type="tns:Preference" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="Preference">
    <xs:sequence>
      <xs:element name="values" type="tns:PreferenceValue" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="scope" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="ModelType">
    <xs:sequence>
      <xs:element name="propDescriptor" type="tns:PropDescriptor" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="uid" type="xs:string" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="uifName" type="xs:string" use="optional"/>
    <xs:attribute name="className" type="xs:string" use="required"/>
    <xs:attribute name="parentTypeName" type="xs:string" use="optional"/>
    <xs:attribute name="typeUid" type="xs:string" use="required"/>
    <xs:attribute name="transientType" type="xs:boolean" use="required"/>
    <xs:attribute name="externalObject" type="xs:boolean" use="required"/>
  </xs:complexType>
  <xs:complexType name="ModelClass">
    <xs:sequence>
      <xs:element name="attributes" type="tns:Attrib" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="parentClassName" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="PreferenceValue">
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="RefId">
    <xs:attribute name="uid" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="ObjectMap">
    <xs:annotation>
      <xs:appinfo>
        <xjb4c-hashmap>
          <key>uid</key>
          <value>bo</value>
        </xjb4c-hashmap>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="bo" type="tns:ModelObject"/>
    </xs:sequence>
    <xs:attribute name="uid" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="ModelObject">
    <xs:annotation>
      <xs:documentation>The ModelObject type is used to represent any Teamcenter business object.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="properties" type="tns:Property" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="uiproperties" type="tns:DisplayProperty" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>As of Teamcenter 8.3 when the Object Property Policy flag uIValueOnly is set
                    the localized property values will be returned in elements of the DisplayProperty type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="props" type="tns:XJProperty" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>As of Teamcenter 9.1.2 and 10.1(???) all property data will be returned in this element vs. properties or
                    uiproperties. The XJPoperty structure is optimized to support both XML and JSON payloads
                    and supports any combination of Object Property Policy flags</xs:documentation>
          <xs:appinfo>
            <xjb4c-type>hashmap</xjb4c-type>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="uid" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:string" use="optional"/>
    <xs:attribute name="classUid" type="xs:string" use="optional"/>
    <xs:attribute name="className" type="xs:string" use="optional"/>
    <xs:attribute name="updateDesc" type="xs:boolean" use="optional"/>
    <xs:attribute name="objectID" type="xs:string" use="optional"/>
    <xs:attribute name="cParamID" type="xs:string" use="optional"/>
    <xs:attribute name="isHistorical" type="xs:boolean" use="optional"/>
    <xs:attribute name="isObsolete" type="xs:boolean" use="optional"/>
    <!--This new attribute is only used by the journal based testing 
        	to get additional information for the purposes of mapping and 
        	performance data. This attribute is owned by the MFG R&D Customer Success team.-->
    <xs:attribute name="jbt_addition" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ErrorStack">
    <xs:annotation>
      <xs:documentation>The ErrorStack contains one or more ErrorValue.
            Where an operation may have more than one contributing reason for the
            errror. The ErrorStack may also have an optional UID or Client ID 
            associated with the error. See the service operation documentation for 
            specifics of if these optional fields are filled.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="errorValues" type="tns:ErrorValue" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="uid" type="xs:string" use="optional"/>
    <xs:attribute name="clientId" type="xs:string" use="optional"/>
    <xs:attribute name="clientIndex" type="xs:integer" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ErrorValue">
    <xs:annotation>
      <xs:documentation>The ErrorValue represents a single error.
            The error includes a code (a unique number indentifying the error),
            a severity level(1,2, or 3) and the message describing the error. The
            message is in the local of the server.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="code" type="xs:integer" use="required"/>
    <xs:attribute name="level" type="xs:integer" use="required"/>
    <xs:attribute name="message" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="PropDescriptor">
    <xs:sequence>
      <xs:element name="propDependants" type="tns:PropDependant" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="uiname" type="xs:string" use="required"/>
    <xs:attribute name="typeUid" type="xs:string" use="required"/>
    <xs:attribute name="lovUid" type="xs:string" use="optional"/>
    <xs:attribute name="lovTypeUid" type="xs:string" use="optional"/>
    <xs:attribute name="type" type="xs:integer" use="required"/>
    <xs:attribute name="ptype" type="xs:integer" use="required"/>
    <xs:attribute name="attachedSpecifier" type="xs:integer" use="optional"/>
    <xs:attribute name="maxLength" type="xs:integer" use="optional"/>
    <xs:attribute name="displayable" type="xs:boolean" use="required"/>
    <xs:attribute name="anArray" type="xs:boolean" use="required"/>
    <xs:attribute name="required" type="xs:boolean" use="optional"/>
    <xs:attribute name="enabled" type="xs:boolean" use="optional"/>
    <xs:attribute name="modifiable" type="xs:boolean" use="required"/>
    <xs:attribute name="maxArraySize" type="xs:integer" use="optional"/>
  </xs:complexType>
  <xs:complexType name="Attrib">
    <xs:attribute name="uid" type="xs:string" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:integer" use="required"/>
    <xs:attribute name="uiName" type="xs:string" use="optional"/>
    <xs:attribute name="maxLength" type="xs:integer" use="optional"/>
    <xs:attribute name="refClassUid" type="xs:string" use="optional"/>
    <xs:attribute name="descriptors" type="xs:integer" use="required"/>
  </xs:complexType>
  <xs:complexType name="Property">
    <xs:annotation>
      <xs:documentation>The Property represents a single property on ModelObject.
            The property data inclues the name of the property, the value(s) and UI or 
            display value(s). The modifiable flag overrides the modifiable flag on the
            coresponding Property Descriptor for this single instnace of the Property.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="values" type="tns:PropertyValue" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="uiValues" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>As of Teamcenter 8.2 localized values of a multi-valued property are returned as an 
                   array of strings vs. a comma separated values in a single string. The uiValues
                   will be empty when the Object Property Policy flag excludeUiValues is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="uiValue" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>As of Teamcenter 2007.1.4 the uiValue is optional and will not be set when the
                Object Property Policy flag excludeUiValues is enabled.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="modifiable" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>As of Teamcenter 2007.1.4 the modifiable flag is optional. This flag will only be set 
                when the Object Property Policy flag includeIsModifiable is enabled.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PropertyValue">
    <xs:attribute name="value" type="xs:string" use="required"/>
    <xs:attribute name="isNull" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>This flag is only set when the property is actually null. If not present the
                    property value is assumed to be NOT null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PropDependant">
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="DisplayProperty">
    <xs:annotation>
      <xs:documentation>The DisplayProperty represents a single property on ModelObject.
            The DisplayProperty is used when the uIValueOnly flag is used
            in Object Property Policy.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="uiValues" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="XJProperty">
    <xs:annotation>
      <xs:documentation>The XJProperty represents a single property on a ModelObject. The XJProperty is 
                optimized for serialization to XML and JSON, and is capable of handling any 
                combination of Object Property Policy flags, and single valued or multi-valued properties.</xs:documentation>
      <xs:appinfo>
        <xjb4c-hashmap>
          <key>name</key>
          <value>value</value>
        </xjb4c-hashmap>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="value" type="tns:XJPropertyValue"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="XJPropertyValue">
    <xs:annotation>
      <xs:documentation>The XJPropertyValue represents the value(s) of a single property on a
                ModelObject.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="dbValues" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The DB or Real value(s) of the property.
                    When the Object Property Poliyc falg uIValueOnly is enabled this array will 
                    be empty. The content is always string data regardless of the Property type 
                    (int,float,date,string .etc) The value is serialized to a string using the 
                    XSD/XML standards: 
                        boolean:    '1' or '0'
                        date:       yyyy-MM-dd'T'HH:mm:ssZ
                        double:     Scientific or Standard notation, always a US decimal point (never a decimal comma)
                        float:      Scientific or Standard notation, always a US decimal point (never a decimal comma)
                        Tag/BO:     UID string</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uiValues" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The Display or Localized value(s) of the property.
                    When the Object Property Poliyc falg excludeUiValues is enabled this array will 
                    be empty. The uIValueOnly flag takes precidence over the excludeUiValues flag.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isNulls" type="xs:boolean" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>True if a property value is null. This array is filled only when one or more 
                    values is actually null. If not present all values are assumed to be NOT null.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="modifiable" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>The modifiable flag overrides the modifiable flag on the coresponding 
                Property Descriptor for this single instnace of the Property.
                This flag will only be set when the Object Property Policy flag includeIsModifiable
                is enabled.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="TextInfo">
    <xs:annotation>
      <xs:documentation>Simple structure to hold a text value and its coresponding display( localized) version.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="displayValue" type="xs:string" use="required"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Temp\wsdls\SoaExceptions.xsd</con:url><con:content><![CDATA[<!--============================================================================== ================

                         Copyright (c) 2002 EDS PLM Solutions Inc.
                              Unpublished - All rights reserved
====================================================================================================

File description:   See description below.

====================================================================================================

   Date      Name                    Description of Change
17-Jan-2006  Ron Marchi              first cut
13-Feb-2006  Ron Marchi              clean up
06-Mar-2006  Ron Marchi              move service exception
11-Apr-2006  Ron Marchi              fix naming
$HISTORY$

==================================================================================================-->
<xsd:schema targetNamespace="http://teamcenter.com/Schemas/Soa/2006-03/Exceptions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://teamcenter.com/Schemas/Soa/2006-03/Exceptions">
  <xsd:annotation>
    <xsd:documentation>Teamcenter SOA (2006-03)
             This schema contains elements used as SOAP Faults</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="InvalidUserFault" type="tns:InvalidUserException"/>
  <xsd:complexType name="InvalidUserException">
    <xsd:annotation>
      <xsd:documentation>This exception is thrown when the user has not been validated and 
                therefore a session does not exist between the client and server. 
                This exception will be included on signature of every service operation 
                exposed to the client.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="message" type="xsd:string"/>
      <xsd:element name="code" type="xsd:integer"/>
      <xsd:element name="level" type="xsd:integer"/>
      <xsd:element name="tcResponse" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="ssoServerURL" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>As of Teamcenter server 12.0. The URL of the SSO server. This is only set when the system is configured in SSO mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ssoAppID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>As of Teamcenter server 12.0. The Application ID for SSO authentication. This is only set when the system is configured in SSO mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="InvalidCredentialsFault" type="tns:InvalidCredentialsException"/>
  <xsd:complexType name="InvalidCredentialsException">
    <xsd:annotation>
      <xsd:documentation>This exception is thrown when the supplied credentials are not valid.
                This exception will only be included on signature of login operations.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="message">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="code" type="xsd:integer" use="optional"/>
              <xsd:attribute name="level" type="xsd:integer" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="ssoServerURL" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>As of Teamcenter server 12.0. The URL of the SSO server. This is only set when the system is configured in SSO mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ssoAppID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>As of Teamcenter server 12.0. The Application ID for SSO authentication. This is only set when the system is configured in SSO mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="InternalServerFault" type="tns:InternalServerException"/>
  <xsd:complexType name="InternalServerException">
    <xsd:annotation>
      <xsd:documentation>The internal server exception is used to catch any exceptions while 
                processing a service across the different tiers. This exception will 
                be included on signature of every service operation exposed to the client.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messages" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="code" type="xsd:integer" use="optional"/>
              <xsd:attribute name="level" type="xsd:integer" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ConnectionFault" type="tns:ConnectionException"/>
  <xsd:complexType name="ConnectionException">
    <xsd:annotation>
      <xsd:documentation>The Connection exception is used to catch any network or I/O
               errors while marshalling a service request. These exception
               usually be recovered from, that is after the problem with the 
               network has been fixed, the last service request can be retried.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:InternalServerException"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProtocolFault" type="tns:ProtocolException"/>
  <xsd:complexType name="ProtocolException">
    <xsd:annotation>
      <xsd:documentation>The Protocol excetpion is used to catch and errors in the content
               of a service request. These errors are generally a result of a 
               programming error and can not be recovered from.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:InternalServerException"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ServiceFault" type="tns:ServiceException"/>
  <xsd:complexType name="ServiceException">
    <xsd:annotation>
      <xsd:documentation>The ServiceException type is used to return an error from a service.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messages" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="code" type="xsd:integer" use="optional"/>
              <xsd:attribute name="level" type="xsd:integer" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uid" type="xsd:string" use="optional"/>
    <xsd:attribute name="clientId" type="xsd:string" use="optional"/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Temp\wsdls\Core0603Session.xsd</con:url><con:content><![CDATA[<!--@<COPYRIGHT>@
 ==================================================
 Copyright 2012
 Siemens Product Lifecycle Management Software Inc.
 All Rights Reserved.
 ==================================================
 @<COPYRIGHT>@

 ==================================================

   Auto-generated source from service interface.
                 DO NOT EDIT

 ==================================================-->
<xsd:schema targetNamespace="http://teamcenter.com/Schemas/Core/2006-03/Session" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://teamcenter.com/Schemas/Core/2006-03/Session" xmlns:soa="http://teamcenter.com/Schemas/Soa/2006-03/Base">
  <xsd:import namespace="http://teamcenter.com/Schemas/Soa/2006-03/Base" schemaLocation="SoaBase.xsd"/>
  <xsd:element name="GetAvailableServicesResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>List of available services and operations.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="serviceNames" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>List of available services</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetGroupMembershipResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[Info from <font face=&quot;courier&quot; height=&quot;10&quot;>getGroupMembership</font> operation.]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="groupMembers" type="soa:ModelObject" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation><![CDATA[A list of all the valid <b>GroupMember</b> objects for the current session`s <b>User</b>.  A <b>GroupMember</b> holds identifiers for a <b>User</b>, <b>Group</b>, and <b>Role</b> and represents that the user belongs to a group with the particular role.]]]]>><![CDATA[</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation><![CDATA[The plain list has all the <b>GroupMembers</b>, <b>Groups</b> and <b>Roles</b> for this <b>User</b>]]]]>><![CDATA[</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetSessionGroupMemberResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[Information returned from the <font face=&quot;courier&quot; height=&quot;10&quot;>getSessionGroupMember</font> service operation.]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="groupMember" type="soa:ModelObject">
          <xsd:annotation>
            <xsd:documentation>The &lt;b>GroupMember&lt;/b> object which represents the logged in user's, &lt;b>Group&lt;/b>, and Role for the current session.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>The &lt;b>GroupMember&lt;/b> object is included in the plain list.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="LoginResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation><![CDATA[The  <b>User</b> and <b>GroupMember</b> objects for the user of this session. Partial errors are returned in the <font face="courier" height="10">ServiceData</font> when the authentication is successful but requested role is not supported.]]]]>><![CDATA[</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="user" type="soa:ModelObject">
          <xsd:annotation>
            <xsd:documentation>The &lt;b>User&lt;/b> of this session.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="groupMember" type="soa:ModelObject">
          <xsd:annotation>
            <xsd:documentation>The &lt;b>GroupMember&lt;/b> of this session.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>The &lt;b>GroupMember&lt;/b> and &lt;b>User&lt;/b> are added to the plain object list.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PreferencesResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>Info from get/setPreferences</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element ref="soa:Preferences">
          <xsd:annotation>
            <xsd:documentation>The requested preference name/values.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>Any partial errors that may occur when filling this request.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PrefSetting">
    <xsd:annotation>
      <xsd:documentation>Info for setting preferences</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="prefValues" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>The array of values for this perference.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="prefScope" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>The scope in which the preferences are to be set,
"all", "site", "user", "group", or "role".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="prefName" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>The name of the preference.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="GetPreferencesInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="prefNames" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A vector of the names of the desired preferences.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="prefScope" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The scope in which the preferences are to be searched, 
                   "all", "site", "user", "group", or "role".</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <!--PreferencesResponse is used as the getPreferences output element-->
  <xsd:element name="SetPreferencesInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="settings" type="tns:PrefSetting" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>vector of PrefSetting structures, which specify
the scope, name, and value(s) for each of the preferences
to be set.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--PreferencesResponse is used as the setPreferences output element-->
  <xsd:element name="GetAvailableServicesInput">
    <xsd:complexType>
      <xsd:sequence></xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--GetAvailableServicesResponse is used as the getAvailableServices output element-->
  <xsd:element name="GetGroupMembershipInput">
    <xsd:complexType>
      <xsd:sequence></xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--GetGroupMembershipResponse is used as the getGroupMembership output element-->
  <xsd:element name="GetSessionGroupMemberInput">
    <xsd:complexType>
      <xsd:sequence></xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--GetSessionGroupMemberResponse is used as the getSessionGroupMember output element-->
  <xsd:element name="LoginInput">
    <xsd:complexType>
      <xsd:sequence></xsd:sequence>
      <xsd:attribute name="username" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The user's Teamcenter user name.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="password" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The user's Teamcenter password.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="group" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The group ID for this session. If empty (""), the user's default group is assumed.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="role" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The role the user is performing in the group. If empty (""), the user's default role in the group is assumed.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="sessionDiscriminator" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Client defined identifier for this session. This argument is ignored when the client application is deployed in a 2Tier environment (IIOP communication).</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <!--LoginResponse is used as the login output element-->
  <xsd:element name="LoginSSOInput">
    <xsd:complexType>
      <xsd:sequence></xsd:sequence>
      <xsd:attribute name="username" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The user's Teamcenter username.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ssoCredentials" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The user's Teamcenter SSO credentials. This should have been obtained from Teamcenter Security Services.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="group" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The group id for this session. If blank (""), the user's default group is assumed.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="role" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The role the user is performing in the group. If blank (""), the user's default role in the group is assumed.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="sessionDiscriminator" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Client defined identifier for this session. This argument is ignored when the client application is deployed in a 2Tier environment (IIOP communication).</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <!--LoginResponse is used as the loginSSO output element-->
  <xsd:element name="LogoutInput">
    <xsd:complexType>
      <xsd:sequence></xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--ServiceData from the SoaBase.xsd is used as the logout output element-->
  <xsd:element name="SetSessionGroupMemberInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="groupMember" type="soa:ModelObject">
          <xsd:annotation>
            <xsd:documentation><![CDATA[The desired <b>GroupMember</b> for the current session.  The <b>GroupMember</b> defines the <b>Group</b> and <b>Role</b> for the session.]]]]>><![CDATA[</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--ServiceData from the SoaBase.xsd is used as the setSessionGroupMember output element-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Temp\wsdls\WSFaults.xsd</con:url><con:content><![CDATA[<!--bcprt
This software and related documentation are proprietary to UGS Corp.
COPYRIGHT 2004 UGS CORP.  ALL RIGHTS RESERVED
ecprt-->
<xsd:schema targetNamespace="http://teamcenter.com/webservices/2005-06/schemas/WSFaults" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://teamcenter.com/webservices/2005-06/schemas/WSFaults">
  <xsd:annotation>
    <xsd:documentation>Teamcenter Web Services (2005-06)
        This schema contains elements used as SOAP Faults</xsd:documentation>
  </xsd:annotation>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Fault used to map the RequestManagerException-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xsd:element name="RequestManangerFault" type="tns:RequestManangerFaultType"/>
  <xsd:complexType name="RequestManangerFaultType">
    <xsd:annotation>
      <xsd:documentation>The RequestManangerFault element is used to map any exception thrown 
      		in the Presentation Tier or Enterprise Tier during the processing
      		of a Web Service request
      
			Elements:
      		RootException: The exception class that was orgininaly thrown
      					   i.e. "java.io.IOException"
 
			Message:	  The localized error message that is suiteable for
						  display to the user.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="RootException" type="xsd:string"/>
      <xsd:element name="Message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint></con:endpoints><con:operation id="edeaf4b1-bbea-4ff9-8cf7-3b1020b0a1e3" isOneWay="false" action="getAvailableServices" name="getAvailableServices" bindingOperationName="getAvailableServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9ff9e5f3-05e6-409f-9c72-12b12c9ddf3a" name="GetExistServices"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:GetAvailableServicesInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAvailableServices"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c5e89e61-d243-4746-be87-654f362bedcd" isOneWay="false" action="getGroupMembership" name="getGroupMembership" bindingOperationName="getGroupMembership" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="498b3ac4-7920-44e3-ac6b-72984ea15bc4" name="GetInfoAboutCurrentGroup"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:GetGroupMembershipInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getGroupMembership"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="3cf0d856-47ab-4f29-a97e-a525d6c383d4" isOneWay="false" action="getPreferences" name="getPreferences" bindingOperationName="getPreferences" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="457613c6-cebf-4b4d-96cb-e411ae0d8b35" name="get_FMS_BootStrap_property"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:GetPreferencesInput prefScope="site">\r
         <!--Zero or more repetitions:-->\r
         <ses:prefNames>Fms_BootStrap_Urls</ses:prefNames>\r
      </ses:GetPreferencesInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPreferences"/><con:wsrmConfig version="1.2"/></con:call><con:call id="7de37a0a-ccce-4188-8fe1-10f2378ba186" name="get_ItemRevision_shown_relations_property"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:GetPreferencesInput prefScope="site">\r
         <!--Zero or more repetitions:-->\r
         <ses:prefNames>ItemRevision_shown_relations</ses:prefNames>\r
      </ses:GetPreferencesInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPreferences"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="8ba7020a-276f-4955-8239-8acd29cdce84" isOneWay="false" action="getSessionGroupMember" name="getSessionGroupMember" bindingOperationName="getSessionGroupMember" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e151b7ca-4d97-46f8-811d-8f6858f37713" isOneWay="false" action="login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1ae1d2f6-802a-4301-bf44-93ed763473d3" name="Login_as_infodba"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LoginInput username='${#Project#teamcenter_user_name}' password='${#Project#teamcenter_user_password}' group='${#Project#teamcenter_user_group}' role='${#Project#teamcenter_user_role}' sessionDiscriminator="?"/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="login"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="09e2c261-5c33-4928-a8e6-a5ecf8b807dc" isOneWay="false" action="loginSSO" name="loginSSO" bindingOperationName="loginSSO" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0e3ec0e6-0c0f-4bc6-94d9-46590b56b334" isOneWay="false" action="logout" name="logout" bindingOperationName="logout" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cd620772-306e-4cbf-80f9-920d9aa4366c" name="Logout"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LogoutInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="logout"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="4947868c-b5c1-4bef-bc62-8df846d1897d" isOneWay="false" action="setPreferences" name="setPreferences" bindingOperationName="setPreferences" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9a008d76-13ff-444a-8275-9f7e3dbf745e" name="Enable_ShowingNXButton_site"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:SetPreferencesInput>\r
         <!--Zero or more repetitions:-->\r
         <ses:settings prefScope="User" prefName="TC_show_open_in_nx_button">\r
            <!--Zero or more repetitions:-->\r
            <ses:prefValues>true</ses:prefValues>\r
         </ses:settings>\r
      </ses:SetPreferencesInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="setPreferences"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f999ee54-10d5-4145-93bb-6a21aa123074" isOneWay="false" action="setSessionGroupMember" name="setSessionGroupMember" bindingOperationName="setSessionGroupMember" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="97e0adcc-00ea-4454-a935-26fee7ca2578" wsaVersion="NONE" name="Core0603DataManagementSoapBinding" type="wsdl" bindingName="{http://teamcenter.com/Services/Core/2006-03}Core0603DataManagementSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Temp/wsdls/Core0603DataManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Temp/wsdls/Core0603DataManagementService.wsdl"><con:part><con:url>file:/C:/Temp/wsdls/Core0603DataManagementService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://teamcenter.com/Services/Core/2006-03" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsi="http://ws-i.org/schemas/conformanceClaim/" xmlns:imp0="http://teamcenter.com/Schemas/Soa/2006-03/Base" xmlns:imp1="http://teamcenter.com/Schemas/Soa/2006-03/Exceptions" xmlns:imp2="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:imp3="http://teamcenter.com/webservices/2005-06/schemas/WSFaults" xmlns:tns="http://teamcenter.com/Services/Core/2006-03">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://teamcenter.com/Schemas/Soa/2006-03/Base" schemaLocation="SoaBase.xsd"/>
      <xs:import namespace="http://teamcenter.com/Schemas/Soa/2006-03/Exceptions" schemaLocation="SoaExceptions.xsd"/>
      <xs:import namespace="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" schemaLocation="Core0603DataManagement.xsd"/>
      <xs:import namespace="http://teamcenter.com/webservices/2005-06/schemas/WSFaults" schemaLocation="WSFaults.xsd"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="InternalServerFaultFault">
    <wsdl:part name="exx01" element="imp1:InternalServerFault"/>
  </wsdl:message>
  <wsdl:message name="InvalidUserFaultFault">
    <wsdl:part name="exx02" element="imp1:InvalidUserFault"/>
  </wsdl:message>
  <wsdl:message name="setDisplayPropertiesRequest">
    <wsdl:part name="in0" element="imp2:SetDisplayPropertiesInput"/>
  </wsdl:message>
  <wsdl:message name="setDisplayPropertiesResponse">
    <wsdl:part name="out" element="imp0:ServiceData"/>
  </wsdl:message>
  <wsdl:message name="createDatasetsRequest">
    <wsdl:part name="in0" element="imp2:CreateDatasetsInput"/>
  </wsdl:message>
  <wsdl:message name="createDatasetsResponse">
    <wsdl:part name="out" element="imp2:CreateDatasetsResponse"/>
  </wsdl:message>
  <wsdl:message name="createFoldersRequest">
    <wsdl:part name="in0" element="imp2:CreateFoldersInput"/>
  </wsdl:message>
  <wsdl:message name="createFoldersResponse">
    <wsdl:part name="out" element="imp2:CreateFoldersResponse"/>
  </wsdl:message>
  <wsdl:message name="changeOwnershipRequest">
    <wsdl:part name="in0" element="imp2:ChangeOwnershipInput"/>
  </wsdl:message>
  <wsdl:message name="changeOwnershipResponse">
    <wsdl:part name="out" element="imp0:ServiceData"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesRequest">
    <wsdl:part name="in0" element="imp2:GetPropertiesInput"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesResponse">
    <wsdl:part name="out" element="imp0:ServiceData"/>
  </wsdl:message>
  <wsdl:message name="createItemsRequest">
    <wsdl:part name="in0" element="imp2:CreateItemsInput"/>
  </wsdl:message>
  <wsdl:message name="createItemsResponse">
    <wsdl:part name="out" element="imp2:CreateItemsResponse"/>
  </wsdl:message>
  <wsdl:message name="generateItemIdsAndInitialRevisionIdsRequest">
    <wsdl:part name="in0" element="imp2:GenerateItemIdsAndInitialRevisionIdsInput"/>
  </wsdl:message>
  <wsdl:message name="generateItemIdsAndInitialRevisionIdsResponse">
    <wsdl:part name="out" element="imp2:GenerateItemIdsAndInitialRevisionIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="generateRevisionIdsRequest">
    <wsdl:part name="in0" element="imp2:GenerateRevisionIdsInput"/>
  </wsdl:message>
  <wsdl:message name="generateRevisionIdsResponse">
    <wsdl:part name="out" element="imp2:GenerateRevisionIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteObjectsRequest">
    <wsdl:part name="in0" element="imp2:DeleteObjectsInput"/>
  </wsdl:message>
  <wsdl:message name="deleteObjectsResponse">
    <wsdl:part name="out" element="imp0:ServiceData"/>
  </wsdl:message>
  <wsdl:message name="createRelationsRequest">
    <wsdl:part name="in0" element="imp2:CreateRelationsInput"/>
  </wsdl:message>
  <wsdl:message name="createRelationsResponse">
    <wsdl:part name="out" element="imp2:CreateRelationsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRelationsRequest">
    <wsdl:part name="in0" element="imp2:DeleteRelationsInput"/>
  </wsdl:message>
  <wsdl:message name="deleteRelationsResponse">
    <wsdl:part name="out" element="imp0:ServiceData"/>
  </wsdl:message>
  <wsdl:message name="ServiceFaultFault">
    <wsdl:part name="exx01" element="imp1:ServiceFault"/>
  </wsdl:message>
  <wsdl:message name="reviseRequest">
    <wsdl:part name="in0" element="imp2:ReviseInput"/>
  </wsdl:message>
  <wsdl:message name="reviseResponse">
    <wsdl:part name="out" element="imp2:ReviseResponse"/>
  </wsdl:message>
  <wsdl:portType name="Core0603DataManagement">
    <wsdl:operation name="setDisplayProperties">
      <wsdl:documentation><![CDATA[This operation is provided to update the Teamcenter objects for the given name/display value pairs. This operation works for all supported property value types to set display values. When setting this operation it invokes the server <b>PROP_UIF_set_value</b> extensions. For updating an array property, display values need to be comma (,) separated which server parses them into individual values before assigning.<br />Note:  Since LOVs support the <b>display as</b> feature where internal values of the LOV can be different from displayable values, this operation expects that internal value of the selection to be passed and not the display value.<br />]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:setDisplayPropertiesRequest" name="setDisplayPropertiesRequest"/>
      <wsdl:output message="tns:setDisplayPropertiesResponse" name="setDisplayPropertiesResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="createDatasets">
      <wsdl:documentation><![CDATA[This operation creates a list of <b>Datasets</b> and creates the specified relation between created <b>Dataset</b> and input container object.<br /><br /><b>Teamcenter Component:</b><br />Core Model Dataset - A set of capabilities/functionality (data model and behaviours) that form the very core of Teamcenter PLM platform.  This component defines class 'Dataset' behavior.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:createDatasetsRequest" name="createDatasetsRequest"/>
      <wsdl:output message="tns:createDatasetsResponse" name="createDatasetsResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="createFolders">
      <wsdl:documentation><![CDATA[This operation creates a list of new <b>Folder</b> objects with the given names, descriptions and attaches them to the parent container. If attaching a created <b>Folder</b> to its parent container fails, the <b>Folder</b> will not be deleted.<br /><br /><b>Teamcenter Component:</b><br />Core Model Folder - A set of capabilities/functionality (data model and behaviours) that form the very core of Teamcenter PLM platform. This component covers Folders.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:createFoldersRequest" name="createFoldersRequest"/>
      <wsdl:output message="tns:createFoldersResponse" name="createFoldersResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="changeOwnership">
      <wsdl:documentation><![CDATA[This operation can be used to change the ownership on a given business object to the given user and group.  Owning user attribute on the business object will be changed to the given user and owning group attribute is changed to the given group.  The user needs <b>CHANGE_OWNER</b> privilege and <b>WRITE</b> privilege on the business object to be able to change its ownership.  If user does not have the required privileges then this operation will return error code <b>515001</b>. If the given user is invalid or given group is invalid then this operation will return error code <b>515024</b>.<br /><br /><b>Use Cases:</b><br />Change owner menu action calls this operation.<br /><br /><b>Teamcenter Component:</b><br />Core Model General - This component provides a set of generic capabilities that form the very core of Teamcenter platform.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:changeOwnershipRequest" name="changeOwnershipRequest"/>
      <wsdl:output message="tns:changeOwnershipResponse" name="changeOwnershipResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <wsdl:documentation><![CDATA[This service operation is provided to get property values of instances outside of the current <b>object property policy</b> for a particular business object.  Net result of this operation includes the properties expressly defined in the input attributes as well as the properties defined in the current Object Property Policy.<br /><br />This operation takes care of following:<br /><ul><ul><li type="disc">Since all relations are stored as properties on the primary object, this operation supports the expanding of relations.  </li><li type="disc">Properties in the input attribute argument that reference other objects  (relations) will have the properties for those referenced objects returned as defined by the Object Property Policy.</li></ul></ul><br /><b>Limitation:</b><br /><ul><ul><li type="disc">Classification objects attached to WorkspaceObjects using "IMAN_classification" relation are not returned by this operation. User need to use findClassificationObjects operation from Classification service to retrieve properties of such objects. For more information about findClassificationObjects operation please refer classification service guide.</li></ul></ul><br /><br /><b>Teamcenter Component:</b><br />Core Model General - This component provides a set of generic capabilities that form the very core of Teamcenter platform.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:getPropertiesRequest" name="getPropertiesRequest"/>
      <wsdl:output message="tns:getPropertiesResponse" name="getPropertiesResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="createItems">
      <wsdl:documentation><![CDATA[This operation creates a list of <b>Items</b> and associated data (<b>ItemRevision</b>/<b>ItemMasterForm</b>/<b>ItemRevisionMasterForm</b>) based on the input attribute structures and the specified relation type between created <b>Item</b> and input object.  If container and relation type are not input, none of the<b> Items</b> will be related to a container. (There is no default, if any destination is desired, it must be provided as input). Note: createItems are for items creation, if a compound object such as <b>ItemRevision</b> adds a required property in BMIDE, createItems will fail since it only accepts required properties for item types, not for its associated data such as <b>ItemRevision</b>. Also, if any other properties including <b>object description</b> and custom properties are added as required<b> </b>on<b> Item, createItems</b> will fail. In this case, user should use <font face="courier" height="10">createObjects</font> instead.<br /><br /><b>Teamcenter Component:</b><br />Core Model Item - A set of capabilities/functionality (data model and behaviours) that form the very core of Teamcenter PLM platform. This component defines the Item Class and behavior.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:createItemsRequest" name="createItemsRequest"/>
      <wsdl:output message="tns:createItemsResponse" name="createItemsResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="generateItemIdsAndInitialRevisionIds">
      <wsdl:documentation><![CDATA[This operation generates a list of <b>Item</b> IDs and initial <b>ItemRevision</b> IDs.  The initial revision ID is defined as the first revision ID for the given type.<br /><br /><b>Teamcenter Component:</b><br />Core Model Item - A set of capabilities/functionality (data model and behaviours) that form the very core of Teamcenter PLM platform. This component defines the Item Class and behavior.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:generateItemIdsAndInitialRevisionIdsRequest" name="generateItemIdsAndInitialRevisionIdsRequest"/>
      <wsdl:output message="tns:generateItemIdsAndInitialRevisionIdsResponse" name="generateItemIdsAndInitialRevisionIdsResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="generateRevisionIds">
      <wsdl:documentation><![CDATA[This operation generates a set of revision IDs.  The ID can be either the next ID for an existing <b>Item</b> or the first revision ID for a new <b>Item</b>.<br /><br /><b>Dependencies:</b><br />revise, revise2<br /><br /><b>Teamcenter Component:</b><br />Core Model Item - A set of capabilities/functionality (data model and behaviours) that form the very core of Teamcenter PLM platform. This component defines the Item Class and behavior.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:generateRevisionIdsRequest" name="generateRevisionIdsRequest"/>
      <wsdl:output message="tns:generateRevisionIdsResponse" name="generateRevisionIdsResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="deleteObjects">
      <wsdl:documentation><![CDATA[This operation deletes the input objects.  In the case of <b>Item</b>, it also deletes all <b>ItemRevision</b> objects,  associated <b>ItemMaster</b>, <b>ItemRevisionMaster</b> forms, and <b>Dataset</b> objects.  The input object can be an <b>ImanRelation</b>.<br /><br /><b>Teamcenter Component:</b><br />Core Model Types - A set of capabilities/functionality (data model and behaviours) that form the very core of Teamcenter PLM platform. This component defines Types framework.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:deleteObjectsRequest" name="deleteObjectsRequest"/>
      <wsdl:output message="tns:deleteObjectsResponse" name="deleteObjectsResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="createRelations">
      <wsdl:documentation><![CDATA[Creates the specified relation between the input objects (primary and secondary objects). If the relation name is not specified then default relation name specified in either the preference <b>ParentTypeName_ChildTypeName_default_relation</b> or<b> ParentTypeName_default_relation </b>is considered as the relation name. In case none of these preferences are set the relation between the primary and secondary object is not created. If the primary object has a relation property by the specified relation name, then the secondary object is associated with the primary object through the relation property.<br /><br /><b>Teamcenter Component:</b><br />GRM - The Generic Relationship Manager (GRM) module supports the concept of explicit relationships. One can define and enforce specific rules pertaining to relationships, as well as separate the maintenance of relationships from the data itself.]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:createRelationsRequest" name="createRelationsRequest"/>
      <wsdl:output message="tns:createRelationsResponse" name="createRelationsResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="deleteRelations">
      <wsdl:documentation>Deletes the specified relation between the primary and secondary object for each input structure.&lt;br />&lt;br />&lt;b>Teamcenter Component:&lt;/b>&lt;br />GRM - The Generic Relationship Manager (GRM) module supports the concept of explicit relationships. One can define and enforce specific rules pertaining to relationships, as well as separate the maintenance of relationships from the data itself.</wsdl:documentation>
      <wsdl:input message="tns:deleteRelationsRequest" name="deleteRelationsRequest"/>
      <wsdl:output message="tns:deleteRelationsResponse" name="deleteRelationsResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
    <wsdl:operation name="revise">
      <wsdl:documentation>Revises a list of next Item Revisions based on input existing Item Revision object references and any additional attributes.  Uses deep copy rules to propagate existing relations from the Item Revision or to create new references.&lt;br />&lt;br />&lt;b>Teamcenter Component:&lt;/b>&lt;br />Core Model Item - A set of capabilities/functionality (data model and behaviours) that form the very core of Teamcenter PLM platform. This component defines the Item Class and behavior.</wsdl:documentation>
      <wsdl:input message="tns:reviseRequest" name="reviseRequest"/>
      <wsdl:output message="tns:reviseResponse" name="reviseResponse"/>
      <wsdl:fault message="tns:InternalServerFaultFault" name="InternalServerFaultError"/>
      <wsdl:fault message="tns:ServiceFaultFault" name="ServiceFaultError"/>
      <wsdl:fault message="tns:InvalidUserFaultFault" name="InvalidUserFaultError"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="Core0603DataManagementSoapBinding" type="tns:Core0603DataManagement">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="setDisplayProperties">
      <soap:operation style="document" soapAction="setDisplayProperties"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDatasets">
      <soap:operation style="document" soapAction="createDatasets"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFolders">
      <soap:operation style="document" soapAction="createFolders"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeOwnership">
      <soap:operation style="document" soapAction="changeOwnership"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap:operation style="document" soapAction="getProperties"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createItems">
      <soap:operation style="document" soapAction="createItems"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateItemIdsAndInitialRevisionIds">
      <soap:operation style="document" soapAction="generateItemIdsAndInitialRevisionIds"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRevisionIds">
      <soap:operation style="document" soapAction="generateRevisionIds"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteObjects">
      <soap:operation style="document" soapAction="deleteObjects"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRelations">
      <soap:operation style="document" soapAction="createRelations"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelations">
      <soap:operation style="document" soapAction="deleteRelations"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revise">
      <soap:operation style="document" soapAction="revise"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InternalServerFaultError">
        <soap:fault name="InternalServerFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceFaultError">
        <soap:fault name="ServiceFaultError" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidUserFaultError">
        <soap:fault name="InvalidUserFaultError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Core0603DataManagementService">
    <wsdl:port binding="tns:Core0603DataManagementSoapBinding" name="Core-2006-03-DataManagement">
      <soap:address location="http://localhost:80/PTierApp/WebServices/Core-2006-03-DataManagement"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\Temp\wsdls\SoaBase.xsd</con:url><con:content><![CDATA[<!--@<COPYRIGHT>@
  ==================================================
  Copyright 2012
  Siemens Product Lifecycle Management Software Inc.
  All Rights Reserved.
  ==================================================
  @<COPYRIGHT>@-->
<xs:schema targetNamespace="http://teamcenter.com/Schemas/Soa/2006-03/Base" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://teamcenter.com/Schemas/Soa/2006-03/Base">
  <xs:annotation>
    <xs:documentation>This package defines the base types used in services defined under the 
        Teamcenter SOA Framework.</xs:documentation>
  </xs:annotation>
  <xs:element name="ObjectPropertyPolicy">
    <xs:complexType>
      <xs:annotation>
        <xs:documentation>This allows the client application to set the Object property Policy.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="modifiers" type="tns:Modifiers" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="types" type="tns:PolicyType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="useRefCount" type="xs:boolean" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PolicyType">
    <xs:sequence>
      <xs:element name="modifiers" type="tns:Modifiers" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="properties" type="tns:PolicyProperty" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="PolicyProperty">
    <xs:sequence>
      <xs:element name="modifiers" type="tns:Modifiers" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="Modifiers">
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="Value" type="xs:string" use="required"/>
  </xs:complexType>
  <!--Only Elements may be used as service input or output arguments-->
  <xs:element name="ServiceData">
    <xs:complexType>
      <xs:annotation>
        <xs:documentation>The ServiceData type is used to return Teamcenter Model object. 
            Teamcenter Model objects are organized in 4 lists, 'updatedObjs', 'deletedObjs',
            'createdObjs', and 'plainObjs'. The ServiceData type also allows partial
            errors to be returned.
            As of Teamcenter 9.1.2 and 10.1(??) the 'updated', 'deleted', 'created', and 'plain' arrays are used
            with each element in the array being the UID of the object.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="updatedObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="deletedObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="createdObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="childChangeObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="plainObjs" type="tns:RefId" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="updated" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="deleted" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="created" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="childChange" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="plain" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="dataObjects" type="tns:ModelObject" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="modelObjects" type="tns:ObjectMap" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:appinfo>
              <xjb4c-type>hashmap</xjb4c-type>
            </xs:appinfo>
          </xs:annotation>
        </xs:element>
        <xs:element name="partialErrors" type="tns:ErrorStack" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="PartialErrors">
    <xs:complexType>
      <xs:annotation>
        <xs:documentation>The ServiceException type is used to return an error from a service.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:element name="errors" type="tns:ErrorStack" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ModelSchema">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="types" type="tns:ModelType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="classes" type="tns:ModelClass" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Preferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="prefs" type="tns:Preference" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="Preference">
    <xs:sequence>
      <xs:element name="values" type="tns:PreferenceValue" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="scope" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="ModelType">
    <xs:sequence>
      <xs:element name="propDescriptor" type="tns:PropDescriptor" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="uid" type="xs:string" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="uifName" type="xs:string" use="optional"/>
    <xs:attribute name="className" type="xs:string" use="required"/>
    <xs:attribute name="parentTypeName" type="xs:string" use="optional"/>
    <xs:attribute name="typeUid" type="xs:string" use="required"/>
    <xs:attribute name="transientType" type="xs:boolean" use="required"/>
    <xs:attribute name="externalObject" type="xs:boolean" use="required"/>
  </xs:complexType>
  <xs:complexType name="ModelClass">
    <xs:sequence>
      <xs:element name="attributes" type="tns:Attrib" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="parentClassName" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="PreferenceValue">
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="RefId">
    <xs:attribute name="uid" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="ObjectMap">
    <xs:annotation>
      <xs:appinfo>
        <xjb4c-hashmap>
          <key>uid</key>
          <value>bo</value>
        </xjb4c-hashmap>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="bo" type="tns:ModelObject"/>
    </xs:sequence>
    <xs:attribute name="uid" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="ModelObject">
    <xs:annotation>
      <xs:documentation>The ModelObject type is used to represent any Teamcenter business object.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="properties" type="tns:Property" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="uiproperties" type="tns:DisplayProperty" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>As of Teamcenter 8.3 when the Object Property Policy flag uIValueOnly is set
                    the localized property values will be returned in elements of the DisplayProperty type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="props" type="tns:XJProperty" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>As of Teamcenter 9.1.2 and 10.1(???) all property data will be returned in this element vs. properties or
                    uiproperties. The XJPoperty structure is optimized to support both XML and JSON payloads
                    and supports any combination of Object Property Policy flags</xs:documentation>
          <xs:appinfo>
            <xjb4c-type>hashmap</xjb4c-type>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="uid" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:string" use="optional"/>
    <xs:attribute name="classUid" type="xs:string" use="optional"/>
    <xs:attribute name="className" type="xs:string" use="optional"/>
    <xs:attribute name="updateDesc" type="xs:boolean" use="optional"/>
    <xs:attribute name="objectID" type="xs:string" use="optional"/>
    <xs:attribute name="cParamID" type="xs:string" use="optional"/>
    <xs:attribute name="isHistorical" type="xs:boolean" use="optional"/>
    <xs:attribute name="isObsolete" type="xs:boolean" use="optional"/>
    <!--This new attribute is only used by the journal based testing 
        	to get additional information for the purposes of mapping and 
        	performance data. This attribute is owned by the MFG R&D Customer Success team.-->
    <xs:attribute name="jbt_addition" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ErrorStack">
    <xs:annotation>
      <xs:documentation>The ErrorStack contains one or more ErrorValue.
            Where an operation may have more than one contributing reason for the
            errror. The ErrorStack may also have an optional UID or Client ID 
            associated with the error. See the service operation documentation for 
            specifics of if these optional fields are filled.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="errorValues" type="tns:ErrorValue" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="uid" type="xs:string" use="optional"/>
    <xs:attribute name="clientId" type="xs:string" use="optional"/>
    <xs:attribute name="clientIndex" type="xs:integer" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ErrorValue">
    <xs:annotation>
      <xs:documentation>The ErrorValue represents a single error.
            The error includes a code (a unique number indentifying the error),
            a severity level(1,2, or 3) and the message describing the error. The
            message is in the local of the server.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="code" type="xs:integer" use="required"/>
    <xs:attribute name="level" type="xs:integer" use="required"/>
    <xs:attribute name="message" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="PropDescriptor">
    <xs:sequence>
      <xs:element name="propDependants" type="tns:PropDependant" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="uiname" type="xs:string" use="required"/>
    <xs:attribute name="typeUid" type="xs:string" use="required"/>
    <xs:attribute name="lovUid" type="xs:string" use="optional"/>
    <xs:attribute name="lovTypeUid" type="xs:string" use="optional"/>
    <xs:attribute name="type" type="xs:integer" use="required"/>
    <xs:attribute name="ptype" type="xs:integer" use="required"/>
    <xs:attribute name="attachedSpecifier" type="xs:integer" use="optional"/>
    <xs:attribute name="maxLength" type="xs:integer" use="optional"/>
    <xs:attribute name="displayable" type="xs:boolean" use="required"/>
    <xs:attribute name="anArray" type="xs:boolean" use="required"/>
    <xs:attribute name="required" type="xs:boolean" use="optional"/>
    <xs:attribute name="enabled" type="xs:boolean" use="optional"/>
    <xs:attribute name="modifiable" type="xs:boolean" use="required"/>
    <xs:attribute name="maxArraySize" type="xs:integer" use="optional"/>
  </xs:complexType>
  <xs:complexType name="Attrib">
    <xs:attribute name="uid" type="xs:string" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:integer" use="required"/>
    <xs:attribute name="uiName" type="xs:string" use="optional"/>
    <xs:attribute name="maxLength" type="xs:integer" use="optional"/>
    <xs:attribute name="refClassUid" type="xs:string" use="optional"/>
    <xs:attribute name="descriptors" type="xs:integer" use="required"/>
  </xs:complexType>
  <xs:complexType name="Property">
    <xs:annotation>
      <xs:documentation>The Property represents a single property on ModelObject.
            The property data inclues the name of the property, the value(s) and UI or 
            display value(s). The modifiable flag overrides the modifiable flag on the
            coresponding Property Descriptor for this single instnace of the Property.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="values" type="tns:PropertyValue" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="uiValues" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>As of Teamcenter 8.2 localized values of a multi-valued property are returned as an 
                   array of strings vs. a comma separated values in a single string. The uiValues
                   will be empty when the Object Property Policy flag excludeUiValues is enabled.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="uiValue" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>As of Teamcenter 2007.1.4 the uiValue is optional and will not be set when the
                Object Property Policy flag excludeUiValues is enabled.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="modifiable" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>As of Teamcenter 2007.1.4 the modifiable flag is optional. This flag will only be set 
                when the Object Property Policy flag includeIsModifiable is enabled.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PropertyValue">
    <xs:attribute name="value" type="xs:string" use="required"/>
    <xs:attribute name="isNull" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>This flag is only set when the property is actually null. If not present the
                    property value is assumed to be NOT null.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PropDependant">
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="DisplayProperty">
    <xs:annotation>
      <xs:documentation>The DisplayProperty represents a single property on ModelObject.
            The DisplayProperty is used when the uIValueOnly flag is used
            in Object Property Policy.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="uiValues" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="XJProperty">
    <xs:annotation>
      <xs:documentation>The XJProperty represents a single property on a ModelObject. The XJProperty is 
                optimized for serialization to XML and JSON, and is capable of handling any 
                combination of Object Property Policy flags, and single valued or multi-valued properties.</xs:documentation>
      <xs:appinfo>
        <xjb4c-hashmap>
          <key>name</key>
          <value>value</value>
        </xjb4c-hashmap>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="value" type="tns:XJPropertyValue"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="XJPropertyValue">
    <xs:annotation>
      <xs:documentation>The XJPropertyValue represents the value(s) of a single property on a
                ModelObject.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="dbValues" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The DB or Real value(s) of the property.
                    When the Object Property Poliyc falg uIValueOnly is enabled this array will 
                    be empty. The content is always string data regardless of the Property type 
                    (int,float,date,string .etc) The value is serialized to a string using the 
                    XSD/XML standards: 
                        boolean:    '1' or '0'
                        date:       yyyy-MM-dd'T'HH:mm:ssZ
                        double:     Scientific or Standard notation, always a US decimal point (never a decimal comma)
                        float:      Scientific or Standard notation, always a US decimal point (never a decimal comma)
                        Tag/BO:     UID string</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uiValues" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>The Display or Localized value(s) of the property.
                    When the Object Property Poliyc falg excludeUiValues is enabled this array will 
                    be empty. The uIValueOnly flag takes precidence over the excludeUiValues flag.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isNulls" type="xs:boolean" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>True if a property value is null. This array is filled only when one or more 
                    values is actually null. If not present all values are assumed to be NOT null.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="modifiable" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>The modifiable flag overrides the modifiable flag on the coresponding 
                Property Descriptor for this single instnace of the Property.
                This flag will only be set when the Object Property Policy flag includeIsModifiable
                is enabled.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="TextInfo">
    <xs:annotation>
      <xs:documentation>Simple structure to hold a text value and its coresponding display( localized) version.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="displayValue" type="xs:string" use="required"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Temp\wsdls\SoaExceptions.xsd</con:url><con:content><![CDATA[<!--============================================================================== ================

                         Copyright (c) 2002 EDS PLM Solutions Inc.
                              Unpublished - All rights reserved
====================================================================================================

File description:   See description below.

====================================================================================================

   Date      Name                    Description of Change
17-Jan-2006  Ron Marchi              first cut
13-Feb-2006  Ron Marchi              clean up
06-Mar-2006  Ron Marchi              move service exception
11-Apr-2006  Ron Marchi              fix naming
$HISTORY$

==================================================================================================-->
<xsd:schema targetNamespace="http://teamcenter.com/Schemas/Soa/2006-03/Exceptions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://teamcenter.com/Schemas/Soa/2006-03/Exceptions">
  <xsd:annotation>
    <xsd:documentation>Teamcenter SOA (2006-03)
             This schema contains elements used as SOAP Faults</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="InvalidUserFault" type="tns:InvalidUserException"/>
  <xsd:complexType name="InvalidUserException">
    <xsd:annotation>
      <xsd:documentation>This exception is thrown when the user has not been validated and 
                therefore a session does not exist between the client and server. 
                This exception will be included on signature of every service operation 
                exposed to the client.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="message" type="xsd:string"/>
      <xsd:element name="code" type="xsd:integer"/>
      <xsd:element name="level" type="xsd:integer"/>
      <xsd:element name="tcResponse" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="ssoServerURL" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>As of Teamcenter server 12.0. The URL of the SSO server. This is only set when the system is configured in SSO mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ssoAppID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>As of Teamcenter server 12.0. The Application ID for SSO authentication. This is only set when the system is configured in SSO mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="InvalidCredentialsFault" type="tns:InvalidCredentialsException"/>
  <xsd:complexType name="InvalidCredentialsException">
    <xsd:annotation>
      <xsd:documentation>This exception is thrown when the supplied credentials are not valid.
                This exception will only be included on signature of login operations.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="message">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="code" type="xsd:integer" use="optional"/>
              <xsd:attribute name="level" type="xsd:integer" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="ssoServerURL" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>As of Teamcenter server 12.0. The URL of the SSO server. This is only set when the system is configured in SSO mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ssoAppID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>As of Teamcenter server 12.0. The Application ID for SSO authentication. This is only set when the system is configured in SSO mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="InternalServerFault" type="tns:InternalServerException"/>
  <xsd:complexType name="InternalServerException">
    <xsd:annotation>
      <xsd:documentation>The internal server exception is used to catch any exceptions while 
                processing a service across the different tiers. This exception will 
                be included on signature of every service operation exposed to the client.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messages" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="code" type="xsd:integer" use="optional"/>
              <xsd:attribute name="level" type="xsd:integer" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ConnectionFault" type="tns:ConnectionException"/>
  <xsd:complexType name="ConnectionException">
    <xsd:annotation>
      <xsd:documentation>The Connection exception is used to catch any network or I/O
               errors while marshalling a service request. These exception
               usually be recovered from, that is after the problem with the 
               network has been fixed, the last service request can be retried.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:InternalServerException"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProtocolFault" type="tns:ProtocolException"/>
  <xsd:complexType name="ProtocolException">
    <xsd:annotation>
      <xsd:documentation>The Protocol excetpion is used to catch and errors in the content
               of a service request. These errors are generally a result of a 
               programming error and can not be recovered from.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:InternalServerException"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ServiceFault" type="tns:ServiceException"/>
  <xsd:complexType name="ServiceException">
    <xsd:annotation>
      <xsd:documentation>The ServiceException type is used to return an error from a service.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messages" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="code" type="xsd:integer" use="optional"/>
              <xsd:attribute name="level" type="xsd:integer" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uid" type="xsd:string" use="optional"/>
    <xsd:attribute name="clientId" type="xsd:string" use="optional"/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Temp\wsdls\Core0603DataManagement.xsd</con:url><con:content><![CDATA[<!--@<COPYRIGHT>@
 ==================================================
 Copyright 2012
 Siemens Product Lifecycle Management Software Inc.
 All Rights Reserved.
 ==================================================
 @<COPYRIGHT>@

 ==================================================

   Auto-generated source from service interface.
                 DO NOT EDIT

 ==================================================-->
<xsd:schema targetNamespace="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:soa="http://teamcenter.com/Schemas/Soa/2006-03/Base">
  <xsd:import namespace="http://teamcenter.com/Schemas/Soa/2006-03/Base" schemaLocation="SoaBase.xsd"/>
  <xsd:complexType name="AttributeNameValueMap">
    <xsd:annotation>
      <xsd:appinfo>
        <xjb4c-hashmap>
          <key>key</key>
          <value>value</value>
        </xjb4c-hashmap>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="key" type="xsd:string" use="required"></xsd:attribute>
    <xsd:attribute name="value" type="xsd:string" use="required"></xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="IndexToIdMap">
    <xsd:annotation>
      <xsd:appinfo>
        <xjb4c-hashmap>
          <key>key</key>
          <value>value</value>
        </xjb4c-hashmap>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="value" type="tns:ItemIdsAndInitialRevisionIds" minOccurs="0" maxOccurs="unbounded"></xsd:element>
    </xsd:sequence>
    <xsd:attribute name="key" type="xsd:integer" use="required"></xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="IndexToRevIdMap">
    <xsd:annotation>
      <xsd:appinfo>
        <xjb4c-hashmap>
          <key>key</key>
          <value>value</value>
        </xjb4c-hashmap>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="value" type="tns:RevisionIds"></xsd:element>
    </xsd:sequence>
    <xsd:attribute name="key" type="xsd:integer" use="required"></xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ItemRevMap">
    <xsd:annotation>
      <xsd:appinfo>
        <xjb4c-hashmap>
          <key>key</key>
          <value>value</value>
        </xjb4c-hashmap>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="key" type="soa:ModelObject"></xsd:element>
      <xsd:element name="value" type="soa:ModelObject"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ItemRevPropertyMap">
    <xsd:annotation>
      <xsd:appinfo>
        <xjb4c-hashmap>
          <key>key</key>
          <value>value</value>
        </xjb4c-hashmap>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="key" type="soa:ModelObject"></xsd:element>
      <xsd:element name="value" type="tns:ReviseProperties"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CreateDatasetsOutput">
    <xsd:annotation>
      <xsd:documentation>This structure contains information for createDatasets operation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="dataset" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>&lt;b>Dataset&lt;/b> object reference that was created</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="clientId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifier that helps the client to track the object(s) created.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="CreateDatasetsResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>Return structure for createDatasets operation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="output" type="tns:CreateDatasetsOutput" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of created &lt;b>Dataset&lt;/b> output</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>Standard &lt;font face="courier" height="10">ServiceData&lt;/font> member</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="CreateFolderInput">
    <xsd:annotation>
      <xsd:documentation>Input structure for createFolders operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="clientId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifier that helps the client to track the object created, optional.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of the folder to be created, optional, if null, uses value from USER_new_folder_name user exit</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="desc" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Description of the folder to be created, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="CreateFoldersOutput">
    <xsd:annotation>
      <xsd:documentation>This structure contains information for &lt;font face="courier" height="10">createFolders&lt;/font> operation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="folder" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>&lt;b>Folder&lt;/b> object reference that was created</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="clientId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifier that helps the client to track the object created.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="CreateFoldersResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>Return structure for createFolders operation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="output" type="tns:CreateFoldersOutput" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>Each element in the list contains a client Id and the related &lt;b>Folder&lt;/b> object created.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>Standard &lt;font face="courier" height="10">ServiceData&lt;/font> member</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="CreateItemsOutput">
    <xsd:annotation>
      <xsd:documentation>The data structure contains a list of created items and item revisions.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="item" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>The created &lt;b>Item&lt;/b> object</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="itemRev" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>The created &lt;b>ItemRevision&lt;/b> object</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="clientId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifier that helps the client to track the object(s) created.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="CreateItemsResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>Return structure for &lt;font face="courier" height="10">createItems&lt;/font> operation.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="output" type="tns:CreateItemsOutput" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of the created &lt;b>Item&lt;/b> and &lt;b>ItemRevision&lt;/b></xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>Service data</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="CreateRelationsOutput">
    <xsd:annotation>
      <xsd:documentation>The relations created between the primary and secondary object.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="relation" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>The newly created relation.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="clientId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>The unmodified value from the &lt;font face="courier" height="10">Relationship.clientId&lt;/font>. This can be used by the caller to indentify this data structure with the source input data.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="CreateRelationsResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>&lt;font face="courier" height="10">CreateRelationsResponse&lt;/font> structure represents the relations created between the primary and secondary object and errors occurred.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="output" type="tns:CreateRelationsOutput" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of created relations.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>Standard &lt;font face="courier" height="10">ServiceData&lt;/font> object to hold the partial errors that the operation encounters.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="DatasetProperties">
    <xsd:annotation>
      <xsd:documentation>Input structure for createDatasets operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="container" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>Object reference of the container used to hold the created &lt;b>Dataset&lt;/b>, may be an empty string</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="clientId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifier that helps the client to track the object(s) created, required, should be unique for the input set</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="type" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Type of the &lt;b>Dataset&lt;/b> to be created</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of the &lt;b>Dataset&lt;/b> to be created</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Description of the &lt;b>Dataset&lt;/b> to be created, may be an empty string</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="toolUsed" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of the &lt;b>Tool&lt;/b> used to open the created &lt;b>Dataset&lt;/b>, may be an empty string.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="relationType" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of the relation type for the &lt;b>Dataset&lt;/b> to be created, may be an empty string.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ExtendedAttributes">
    <xsd:annotation>
      <xsd:documentation><![CDATA[This structure contains information for <font face="courier" height="10">createItems</font> operation to support setting attribute values on the created <b>Item</b>, <b>ItemRevision</b>, or corresponding master forms that may be created with the objects.]]]]>><![CDATA[</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="attributes" type="tns:AttributeNameValueMap" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:appinfo>
            <xjb4c-type>hashmap</xjb4c-type>
          </xsd:appinfo>
          <xsd:documentation>A map of  attributes names and initial values pairs (&lt;font face="courier" height="10">string/string&lt;/font>). Multi-valued properties are represented with a comma separated string</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="objectType" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>The type of object to set these properties on i.e. &lt;b>Connection&lt;/b>, &lt;b>ConnectionRevision&lt;/b></xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="GenerateItemIdsAndInitialRevisionIdsProperties">
    <xsd:annotation>
      <xsd:documentation>The input information for &lt;font face="courier" height="10">generateItemIdsAndInitialRevisionIds&lt;/font> operation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="item" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>&lt;b>Item&lt;/b> object reference to use as a basis for the next &lt;b>Item&lt;/b> ID. This value is optional.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="itemType" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Type of the &lt;b>Item&lt;/b> for which the IDs will be generated.  This value is optional.  The default is &lt;i>Item&lt;/i>.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="count" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Total number of IDs to be generated</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="GenerateItemIdsAndInitialRevisionIdsResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>Return structure for &lt;font face="courier" height="10">generateItemIdsAndInitialRevisionIds&lt;/font> operation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="outputItemIdsAndInitialRevisionIds" type="tns:IndexToIdMap" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:appinfo>
              <xjb4c-type>hashmap</xjb4c-type>
            </xsd:appinfo>
            <xsd:documentation>A list of the new &lt;b>Item&lt;/b> and &lt;b>ItemRevision&lt;/b> IDs and flags indicating if the system is configured to allow modification of the id values after they have been generated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>Service data</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="GenerateRevisionIdsProperties">
    <xsd:annotation>
      <xsd:documentation>The data structure contains information for &lt;font face="courier" height="10">generateRevisionIds&lt;/font> operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="item" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>&lt;b>Item&lt;/b> object reference to get the next revision id, optional</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="itemType" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Type of the ids to generate, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="GenerateRevisionIdsResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>The data structure contains returned information for &lt;font face="courier" height="10">generateRevisionIds&lt;/font> operation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="outputRevisionIds" type="tns:IndexToRevIdMap" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:appinfo>
              <xjb4c-type>hashmap</xjb4c-type>
            </xsd:appinfo>
            <xsd:documentation>A list of the new generated id values</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>Service data</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="ItemIdsAndInitialRevisionIds">
    <xsd:annotation>
      <xsd:documentation>This structure contain output information for &lt;font face="courier" height="10">generateItemIdsAndInitialRevisionIds&lt;/font> operation indicating the new item id, new revision id, and a flag for each that indicates if the caller should be able to override the generated values.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="newItemId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Newly generated &lt;b>Item&lt;/b> Id</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="newRevId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Newly generated &lt;b>ItemRevision&lt;/b> Id</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="isItemModify" type="xsd:boolean" use="required">
      <xsd:annotation>
        <xsd:documentation>Flag to specify whether &lt;b>Item&lt;/b> id is modifiable</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="isRevModify" type="xsd:boolean" use="required">
      <xsd:annotation>
        <xsd:documentation>Flag to specify whether &lt;b>ItemRevision&lt;/b> id is modifiable</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ItemProperties">
    <xsd:annotation>
      <xsd:documentation>Input structure for createItems operation.  Specifies attributes for the new &lt;b>Item&lt;/b> or &lt;b>ItemRevision&lt;/b>.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="extendedAttributes" type="tns:ExtendedAttributes" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Name/value pairs for additional attributes to set, optional</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="clientId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifier that helps the client to track the object(s) created, optional.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="itemId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Id of the &lt;b>Item&lt;/b> to be created, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of the &lt;b>Item&lt;/b> to be created, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="type" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Type of the &lt;b>Item&lt;/b> to be created, optional, default is &lt;b>Item&lt;/b></xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="revId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Id of the initail revision of the &lt;b>Item&lt;/b> to be created, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="uom" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Unit of measure(UOM) of the &lt;b>Item&lt;/b> to be created, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Description of the &lt;b>Item&lt;/b> to be created, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ObjectOwner">
    <xsd:annotation>
      <xsd:documentation>This structure contains the business object whose owner needs to be changed, new owning user of the object and new owning group of the object.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="object" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>Teamcenter Business object.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="owner" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>New owning user of the business object.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="group" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>New owning group of the business object.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Relationship">
    <xsd:annotation>
      <xsd:documentation>&lt;font face="courier" height="10">Relationship&lt;/font> structure represents all required parameters to create the relation between the primary and secondary object.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="primaryObject" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>The primary object to create the relation from</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="secondaryObject" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>The secondary object to create the relation to.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="userData" type="soa:ModelObject">
        <xsd:annotation>
          <xsd:documentation>The user data object used to create the relation. This parameter is optional.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="clientId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>A unique string supplied by the caller. This ID is used to identify return data elements and partial errors associated with this &lt;font face="courier" height="10">Relationship&lt;/font> structure.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="relationType" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of the relation type to create, required. This could be an empty string, in which case the relation name will be searched in the preference, &lt;b>ParentTypeName_ChildTypeName_default_relation &lt;/b>or&lt;b> ParentTypeName_default_relation&lt;/b>.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ReviseProperties">
    <xsd:annotation>
      <xsd:documentation>This structure contains information about new revision id, name, description and extended attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="extendedAttributes" type="tns:AttributeNameValueMap" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:appinfo>
            <xjb4c-type>hashmap</xjb4c-type>
          </xsd:appinfo>
          <xsd:documentation>Name/value pairs for additional attributes to set, optional</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="revId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>New revision id of the &lt;b>Item&lt;/b> to be revised, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of the new &lt;b>ItemRevision&lt;/b>, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Description of the new &lt;b>ItemRevision&lt;/b>, optional</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="ReviseResponse">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>Return structure for revise operation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="oldItemRevToNewItemRev" type="tns:ItemRevMap" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:appinfo>
              <xjb4c-type>hashmap</xjb4c-type>
            </xsd:appinfo>
            <xsd:documentation>A Map whose keys are the input old item revisions and values are the newly created revisions</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="soa:ServiceData">
          <xsd:annotation>
            <xsd:documentation>Standard ServiceData member</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="RevisionIds">
    <xsd:annotation>
      <xsd:documentation>This structure contains information for &lt;font face="courier" height="10">generateRevisionIds&lt;/font> operation</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="newRevId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Revision id that was generated</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="isModify" type="xsd:boolean" use="required">
      <xsd:annotation>
        <xsd:documentation>Flag to specify whether revision id is modifiable</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="SetDisplayPropertiesInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="objects" type="soa:ModelObject" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of objects for which property values need to be set</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="attributes" type="tns:AttributeNameValueMap" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:appinfo>
              <xjb4c-type>hashmap</xjb4c-type>
            </xsd:appinfo>
            <xsd:documentation>A map of attribute names and display values of a property  (string/string)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--ServiceData from the SoaBase.xsd is used as the setDisplayProperties output element-->
  <xsd:element name="CreateDatasetsInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="input" type="tns:DatasetProperties" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>The information needed to create &lt;b>Dataset&lt;/b> objects&lt;br /></xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--CreateDatasetsResponse is used as the createDatasets output element-->
  <xsd:element name="CreateFoldersInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="folders" type="tns:CreateFolderInput" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>Input struture to create &lt;b>Folder&lt;/b> Objects</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="container" type="soa:ModelObject">
          <xsd:annotation>
            <xsd:documentation>The object to which all the created &lt;b>Folder&lt;/b> objects will be related to via the input relation type, may be null.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="relationType" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The name of relation type that all created &lt;b>Folder&lt;/b> objects will be related to the container, may be an empty string.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <!--CreateFoldersResponse is used as the createFolders output element-->
  <xsd:element name="ChangeOwnershipInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="input" type="tns:ObjectOwner" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>Input object to the operation that holds the business object, new owning user and new owning group.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--ServiceData from the SoaBase.xsd is used as the changeOwnership output element-->
  <xsd:element name="GetPropertiesInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="objects" type="soa:ModelObject" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>List of attribute/property name strings for which values are needed</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="attributes" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>List of object references for which property values are requested</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--ServiceData from the SoaBase.xsd is used as the getProperties output element-->
  <xsd:element name="CreateItemsInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="properties" type="tns:ItemProperties" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of properties to create new &lt;b>Item&lt;/b> objects</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="container" type="soa:ModelObject">
          <xsd:annotation>
            <xsd:documentation>The container object to which all the items will be related to via the input relation type, optional.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="relationType" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>The relation type that will be used to relate the newly created &lt;b>Item&lt;/b>s to the container, optional.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <!--CreateItemsResponse is used as the createItems output element-->
  <xsd:element name="GenerateItemIdsAndInitialRevisionIdsInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="input" type="tns:GenerateItemIdsAndInitialRevisionIdsProperties" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of the &lt;b>Item&lt;/b>, &lt;b>Item&lt;/b> type, and the number of IDs to generate.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--GenerateItemIdsAndInitialRevisionIdsResponse is used as the generateItemIdsAndInitialRevisionIds output element-->
  <xsd:element name="GenerateRevisionIdsInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="input" type="tns:GenerateRevisionIdsProperties" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list &lt;b>Item&lt;/b> and &lt;b>Item&lt;/b> type</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--GenerateRevisionIdsResponse is used as the generateRevisionIds output element-->
  <xsd:element name="DeleteObjectsInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="objects" type="soa:ModelObject" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of objects to be deleted</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--ServiceData from the SoaBase.xsd is used as the deleteObjects output element-->
  <xsd:element name="CreateRelationsInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="input" type="tns:Relationship" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of structures containing details of relationships to be created between primary and secondary objects with the given relation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--CreateRelationsResponse is used as the createRelations output element-->
  <xsd:element name="DeleteRelationsInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="input" type="tns:Relationship" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>A list of structures containing details of relationships to be deleted between primary and secondary objects with the given relation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--ServiceData from the SoaBase.xsd is used as the deleteRelations output element-->
  <xsd:element name="ReviseInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="input" type="tns:ItemRevPropertyMap" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:appinfo>
              <xjb4c-type>hashmap</xjb4c-type>
            </xsd:appinfo>
            <xsd:documentation>A map of Item Revisions and ReviseProperties structures</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--ReviseResponse is used as the revise output element-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Temp\wsdls\WSFaults.xsd</con:url><con:content><![CDATA[<!--bcprt
This software and related documentation are proprietary to UGS Corp.
COPYRIGHT 2004 UGS CORP.  ALL RIGHTS RESERVED
ecprt-->
<xsd:schema targetNamespace="http://teamcenter.com/webservices/2005-06/schemas/WSFaults" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://teamcenter.com/webservices/2005-06/schemas/WSFaults">
  <xsd:annotation>
    <xsd:documentation>Teamcenter Web Services (2005-06)
        This schema contains elements used as SOAP Faults</xsd:documentation>
  </xsd:annotation>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--Fault used to map the RequestManagerException-->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xsd:element name="RequestManangerFault" type="tns:RequestManangerFaultType"/>
  <xsd:complexType name="RequestManangerFaultType">
    <xsd:annotation>
      <xsd:documentation>The RequestManangerFault element is used to map any exception thrown 
      		in the Presentation Tier or Enterprise Tier during the processing
      		of a Web Service request
      
			Elements:
      		RootException: The exception class that was orgininaly thrown
      					   i.e. "java.io.IOException"
 
			Message:	  The localized error message that is suiteable for
						  display to the user.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="RootException" type="xsd:string"/>
      <xsd:element name="Message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-DataManagement</con:endpoint></con:endpoints><con:operation id="c33cfe36-125f-456a-9e3a-39c6260b0ed8" isOneWay="false" action="changeOwnership" name="changeOwnership" bindingOperationName="changeOwnership" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24f5f498-c088-42da-bf1b-6626f18de895" isOneWay="false" action="createDatasets" name="createDatasets" bindingOperationName="createDatasets" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ca685fd7-a397-4d90-a930-42214285148b" isOneWay="false" action="createFolders" name="createFolders" bindingOperationName="createFolders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3fcd3716-25cc-4a42-a330-45d1f1bdfe7a" name="create_Folder_demoWSDL"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-DataManagement</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:base="http://teamcenter.com/Schemas/Soa/2006-03/Base">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dat:CreateFoldersInput relationType="?">\r
         <!--Zero or more repetitions:-->\r
         <dat:folders clientId="?" name="demoWSDL" desc="Это папка создана из SOAPUI"/>
         <dat:container uid="?" type="Folder" classUid="?" className="?" updateDesc="?" objectID="?" cParamID="?" isHistorical="?" isObsolete="?" jbt_addition="?">
            <!--Zero or more repetitions:-->
            <base:properties name="?" uiValue="?" modifiable="?">\r
               <!--Zero or more repetitions:-->\r
               <base:values value="?" isNull="?"/>\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:properties>\r
            <!--Zero or more repetitions:-->\r
            <base:uiproperties name="?">\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:uiproperties>\r
            <!--Zero or more repetitions:-->\r
            <base:props name="?">\r
               <base:value modifiable="?">\r
                  <!--Zero or more repetitions:-->\r
                  <base:dbValues>?</base:dbValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:uiValues>?</base:uiValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:isNulls>?</base:isNulls>\r
               </base:value>\r
            </base:props>\r
         </dat:container>\r
      </dat:CreateFoldersInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="createFolders"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="52a35fac-fccf-4f99-9d05-75c8586a3f90" isOneWay="false" action="createItems" name="createItems" bindingOperationName="createItems" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7a956825-0e99-46ec-ad23-5d9f2c5e5924" name="create_Item_demoWSDL"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-DataManagement</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:base="http://teamcenter.com/Schemas/Soa/2006-03/Base">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:CreateItemsInput relationType="contents">
         <!--Zero or more repetitions:-->
         <dat:properties clientId="?" itemId="" name="demoWSDL" type="Item" revId="A" uom="?" description="Айтем был создан путём обращения из SOAPUI">
            <!--Zero or more repetitions:-->
            <dat:extendedAttributes objectType="">
               <!--Zero or more repetitions:-->
               <dat:attributes key="?" value="?"/>
            </dat:extendedAttributes>
         </dat:properties>
         <dat:container uid="?" type="Item" classUid="?" className="Item" updateDesc="Айтем был создан путём обращения из SOAPUI" objectID="?" cParamID="?" isHistorical="?" isObsolete="?" jbt_addition="?">
            <!--Zero or more repetitions:-->
            <base:properties name="?" uiValue="?" modifiable="?">
               <!--Zero or more repetitions:-->
               <base:values value="?" isNull="?"/>
               <!--Zero or more repetitions:-->
               <base:uiValues>?</base:uiValues>
            </base:properties>
            <!--Zero or more repetitions:-->
            <base:uiproperties name="?">
               <!--Zero or more repetitions:-->
               <base:uiValues>?</base:uiValues>
            </base:uiproperties>
            <!--Zero or more repetitions:-->
            <base:props name="?">
               <base:value modifiable="?">
                  <!--Zero or more repetitions:-->
                  <base:dbValues>?</base:dbValues>
                  <!--Zero or more repetitions:-->
                  <base:uiValues>?</base:uiValues>
                  <!--Zero or more repetitions:-->
                  <base:isNulls>?</base:isNulls>
               </base:value>
            </base:props>
         </dat:container>
      </dat:CreateItemsInput>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="createItems"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="16919ea7-9fde-40e5-b9a6-899cd6e3c4ba" isOneWay="false" action="createRelations" name="createRelations" bindingOperationName="createRelations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5b66b435-9967-41ae-b1b7-3512cabbbd14" isOneWay="false" action="deleteObjects" name="deleteObjects" bindingOperationName="deleteObjects" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7a0732a-aa5a-43ee-bc7b-d595d2c0c49c" isOneWay="false" action="deleteRelations" name="deleteRelations" bindingOperationName="deleteRelations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="be6944be-0186-4f18-a74f-6050f2620f48" isOneWay="false" action="generateItemIdsAndInitialRevisionIds" name="generateItemIdsAndInitialRevisionIds" bindingOperationName="generateItemIdsAndInitialRevisionIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f607f2e8-58ca-46c7-8bef-9c12bee6c136" isOneWay="false" action="generateRevisionIds" name="generateRevisionIds" bindingOperationName="generateRevisionIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="43b9bace-3908-45e7-8fed-ea860b359ea2" isOneWay="false" action="getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8758a824-cd47-4d98-b30b-cd401f8aa71f" name="get_Item_properties"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-DataManagement</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:base="http://teamcenter.com/Schemas/Soa/2006-03/Base">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dat:GetPropertiesInput>\r
         <!--Zero or more repetitions:-->\r
         <dat:objects uid="?" type="Item" classUid="?" className="?" updateDesc="?" objectID="" cParamID="?" isHistorical="?" isObsolete="?" jbt_addition="?">\r
            <!--Zero or more repetitions:-->\r
            <base:properties name="?" uiValue="?" modifiable="?">\r
               <!--Zero or more repetitions:-->\r
               <base:values value="?" isNull="?"/>\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:properties>\r
            <!--Zero or more repetitions:-->\r
            <base:uiproperties name="?">\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:uiproperties>\r
            <!--Zero or more repetitions:-->\r
            <base:props name="">\r
               <base:value modifiable="?">\r
                  <!--Zero or more repetitions:-->\r
                  <base:dbValues>?</base:dbValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:uiValues>?</base:uiValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:isNulls>?</base:isNulls>\r
               </base:value>\r
            </base:props>\r
         </dat:objects>\r
         <!--Zero or more repetitions:-->\r
         <dat:attributes>?</dat:attributes>\r
      </dat:GetPropertiesInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getProperties"/><con:wsrmConfig version="1.2"/></con:call><con:call id="fa6d073e-2a23-4bfb-adf6-d70ad5ff40b6" name="get_Part_properties"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-DataManagement</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:base="http://teamcenter.com/Schemas/Soa/2006-03/Base">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dat:GetPropertiesInput>\r
         <!--Zero or more repetitions:-->\r
         <dat:objects uid="?" type="Part" classUid="?" className="?" updateDesc="?" objectID="" cParamID="?" isHistorical="?" isObsolete="?" jbt_addition="?">\r
            <!--Zero or more repetitions:-->\r
            <base:properties name="?" uiValue="?" modifiable="?">\r
               <!--Zero or more repetitions:-->\r
               <base:values value="?" isNull="?"/>\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:properties>\r
            <!--Zero or more repetitions:-->\r
            <base:uiproperties name="?">\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:uiproperties>\r
            <!--Zero or more repetitions:-->\r
            <base:props name="">\r
               <base:value modifiable="?">\r
                  <!--Zero or more repetitions:-->\r
                  <base:dbValues>?</base:dbValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:uiValues>?</base:uiValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:isNulls>?</base:isNulls>\r
               </base:value>\r
            </base:props>\r
         </dat:objects>\r
         <!--Zero or more repetitions:-->\r
         <dat:attributes>?</dat:attributes>\r
      </dat:GetPropertiesInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getProperties"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="596d283a-b51a-4389-9c76-9b1b299f5dc5" isOneWay="false" action="revise" name="revise" bindingOperationName="revise" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ca668e1d-e119-477f-9e26-94db1c244687" isOneWay="false" action="setDisplayProperties" name="setDisplayProperties" bindingOperationName="setDisplayProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite id="4c7f7075-cdb0-425d-b000-8c6a8e008b31" name="ManipulationsOnTeamcenter"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4372b45f-1376-424f-9373-22510d7094b3" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Login_and_getExistServices" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" id="65f8b8cb-7289-4c32-b7a7-e4bd9c1c4d4c" name="login - Login_as_infodba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login - Login_as_infodba" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="71978e90-4512-4c47-a809-3f20e923b5a7"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LoginInput username="infodba" password="infodba" group="dba" role="DBA" sessionDiscriminator="?"/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="18be32ce-1610-4b1d-b29c-401f99c9ece5" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b891b50b-d190-495d-b11d-08852489a3fa" name="getAvailableServices - GetExistServices"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>getAvailableServices</con:operation><con:request name="getAvailableServices - GetExistServices" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="20836ce7-0128-4ae6-9d84-1871fbe541bc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:GetAvailableServicesInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="41896281-1827-4d01-b264-f347f39d14af" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAvailableServices"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0c454b8e-805a-422c-88bc-69772ee6fead" name="logout - Logout"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout - Logout" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7bcedfad-33b6-428f-a8c5-49a0a7776b6a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LogoutInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9fb3dd53-2057-4c2c-832b-7cd303103945" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="logout"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1a3ed7c-10f5-4dad-968f-79be70c06164" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Login_and_getGroupInfo" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" id="d3f8b7a1-4c8b-442c-970a-e8a76aeb0000" name="login - Login_as_infodba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login - Login_as_infodba" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4480d739-b349-4d52-895e-6ceb3d1622eb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LoginInput username="infodba" password="infodba" group="dba" role="DBA" sessionDiscriminator="?"/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="c10e6668-5999-4c88-bdb8-6e0a2252fa40" name="Login was success"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="12e26e27-c320-45d1-959e-8953a089072d" name="getGroupMembership - GetInfoAboutCurrentGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>getGroupMembership</con:operation><con:request name="getGroupMembership - GetInfoAboutCurrentGroup" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6b568080-f6f0-4802-a6a4-dad085aec585"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:GetGroupMembershipInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c28e369d-39f9-4f64-8737-88630e469290" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getGroupMembership"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1dcf2d94-6685-401e-a06a-8aae1dc6e641" name="logout - Logout"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout - Logout" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b985e094-7b77-4a12-ad58-f4ff6c38fbeb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LogoutInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c09d1bd-1cc8-4a75-8a74-55bab530f90f" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="logout"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b5f93924-484a-4b14-bd65-27be6be5225e" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Login_and_enable_ShowNX_button" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" id="1238cabc-366f-4f40-bd8a-fbdb117243e8" name="login - Login_as_infodba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login - Login_as_infodba" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f201f257-f885-4c98-a8dd-c4d727224ae2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LoginInput username='${#Project#teamcenter_user_name}' password='${#Project#teamcenter_user_password}' group='${#Project#teamcenter_user_group}' role='${#Project#teamcenter_user_role}' sessionDiscriminator="?"/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="31c0c6bd-c1ba-4255-a0f2-0b274bc899e8" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="70f8fda8-b1db-4f75-bb9b-83b75e624f07" name="setPreferences - Enable_ShowingNXButton_site"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>setPreferences</con:operation><con:request name="setPreferences - Enable_ShowingNXButton_site" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8776988a-4919-41f0-9c05-45187d828df5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:SetPreferencesInput>\r
         <!--Zero or more repetitions:-->\r
         <ses:settings prefScope="site" prefName="TC_show_open_in_nx_button">\r
            <!--Zero or more repetitions:-->\r
            <ses:prefValues>true</ses:prefValues>\r
         </ses:settings>\r
      </ses:SetPreferencesInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="985a36cf-6c05-4834-aea9-60cafe3f2b83" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="setPreferences"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ef9b5ca5-1128-4ccc-903c-45f55aa5c0af" name="logout - Logout"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout - Logout" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="60bb2c13-a88f-4db0-9267-0612a1b0ad7e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LogoutInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1b4570f1-ae49-47d9-beb2-72fea0d9bffb" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="logout"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fa493c39-5d98-4c35-a8ac-fc66ee9588a6" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Login_and_getPreferences" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" id="3b2c633e-d1a0-4fa8-adaa-5848db595a3d" name="login - Login_as_infodba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login - Login_as_infodba" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f201f257-f885-4c98-a8dd-c4d727224ae2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LoginInput username='${#Project#teamcenter_user_name}' password='${#Project#teamcenter_user_password}' group='${#Project#teamcenter_user_group}' role='${#Project#teamcenter_user_role}' sessionDiscriminator="?"/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="31c0c6bd-c1ba-4255-a0f2-0b274bc899e8" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="99d9fc9c-86fd-43c4-bf50-9b812acfe064" name="getPreference - get_FMS_BootStrap_property"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>getPreferences</con:operation><con:request name="getPreference - get_FMS_BootStrap_property" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f1f093b5-3273-4cc2-af21-f04ddbcfe7e4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:GetPreferencesInput prefScope="site">\r
         <!--Zero or more repetitions:-->\r
         <ses:prefNames>Fms_BootStrap_Urls</ses:prefNames>\r
      </ses:GetPreferencesInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="09638f73-9eec-4b81-838d-1e255051a9d2" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPreferences"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="fd02a6a3-d9be-40be-98c8-cf645b46174c" name="getPreferences - get_ItemRevision_shown_relations_property"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>getPreferences</con:operation><con:request name="getPreferences - get_ItemRevision_shown_relations_property" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9b97ad2e-8011-4856-8449-b49a4f440ea1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:GetPreferencesInput prefScope="site">\r
         <!--Zero or more repetitions:-->\r
         <ses:prefNames>ItemRevision_shown_relations</ses:prefNames>\r
      </ses:GetPreferencesInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="58d14ef6-4d9f-4cc3-bebc-6388990db1d5" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPreferences"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8ec90cc2-0ace-4eaa-bad9-3f48c3bf1408" name="logout - Logout"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout - Logout" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="60bb2c13-a88f-4db0-9267-0612a1b0ad7e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LogoutInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1b4570f1-ae49-47d9-beb2-72fea0d9bffb" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="logout"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c03de3ff-eafc-41d0-8873-ebee4a1b3b1a" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Login_and_createNewFolder&amp;Item&amp;GetProperty" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" id="8ef33262-48a8-4313-b8ef-ce844a4b4e41" name="login - Login_as_infodba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login - Login_as_infodba" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4480d739-b349-4d52-895e-6ceb3d1622eb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LoginInput username="infodba" password="infodba" group="dba" role="DBA" sessionDiscriminator="?"/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="c10e6668-5999-4c88-bdb8-6e0a2252fa40" name="Login was success"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="48e2ea8d-209a-44a3-ba0a-bb129326ee6e" name="createFolder - create_Folder_demoWSDL"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603DataManagementSoapBinding</con:interface><con:operation>createFolders</con:operation><con:request name="createFolder - create_Folder_demoWSDL" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="441a87f2-ceff-499e-97e3-bc6185c58831"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-DataManagement</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:base="http://teamcenter.com/Schemas/Soa/2006-03/Base">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dat:CreateFoldersInput relationType="?">\r
         <!--Zero or more repetitions:-->\r
         <dat:folders clientId="?" name="demoWSDL" desc="Это папка создана из SOAPUI"/>\r
         <dat:container uid="?" type="Folder" classUid="?" className="?" updateDesc="?" objectID="?" cParamID="?" isHistorical="?" isObsolete="?" jbt_addition="?">\r
            <!--Zero or more repetitions:-->\r
            <base:properties name="?" uiValue="?" modifiable="?">\r
               <!--Zero or more repetitions:-->\r
               <base:values value="?" isNull="?"/>\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:properties>\r
            <!--Zero or more repetitions:-->\r
            <base:uiproperties name="?">\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:uiproperties>\r
            <!--Zero or more repetitions:-->\r
            <base:props name="?">\r
               <base:value modifiable="?">\r
                  <!--Zero or more repetitions:-->\r
                  <base:dbValues>?</base:dbValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:uiValues>?</base:uiValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:isNulls>?</base:isNulls>\r
               </base:value>\r
            </base:props>\r
         </dat:container>\r
      </dat:CreateFoldersInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="004f6749-d3c9-48c5-a75f-2b3f046aa7b1" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="createFolders"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f5dbea8b-4451-4bc9-9bd9-174fd7210a05" name="createItems - create_Item_demoWSDL"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603DataManagementSoapBinding</con:interface><con:operation>createItems</con:operation><con:request name="createItems - create_Item_demoWSDL" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a01410bf-6eca-46e3-b43d-124396907871"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-DataManagement</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:base="http://teamcenter.com/Schemas/Soa/2006-03/Base">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dat:CreateItemsInput relationType="contents">\r
         <!--Zero or more repetitions:-->\r
         <dat:properties clientId="?" itemId="" name="demoWSDL" type="Item" revId="A" uom="?" description="Айтем был создан путём обращения из SOAPUI">\r
            <!--Zero or more repetitions:-->\r
            <dat:extendedAttributes objectType="">\r
               <!--Zero or more repetitions:-->\r
               <dat:attributes key="?" value="?"/>\r
            </dat:extendedAttributes>\r
         </dat:properties>\r
         <dat:container uid="?" type="Item" classUid="?" className="Item" updateDesc="Айтем был создан путём обращения из SOAPUI" objectID="?" cParamID="?" isHistorical="?" isObsolete="?" jbt_addition="?">\r
            <!--Zero or more repetitions:-->\r
            <base:properties name="?" uiValue="?" modifiable="?">\r
               <!--Zero or more repetitions:-->\r
               <base:values value="?" isNull="?"/>\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:properties>\r
            <!--Zero or more repetitions:-->\r
            <base:uiproperties name="?">\r
               <!--Zero or more repetitions:-->\r
               <base:uiValues>?</base:uiValues>\r
            </base:uiproperties>\r
            <!--Zero or more repetitions:-->\r
            <base:props name="?">\r
               <base:value modifiable="?">\r
                  <!--Zero or more repetitions:-->\r
                  <base:dbValues>?</base:dbValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:uiValues>?</base:uiValues>\r
                  <!--Zero or more repetitions:-->\r
                  <base:isNulls>?</base:isNulls>\r
               </base:value>\r
            </base:props>\r
         </dat:container>\r
      </dat:CreateItemsInput>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="068325ca-3c2a-44dc-920e-97477cb87422" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="createItems"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="transfer_Property_fromCreatedItemToGetProperties" id="7486f7b3-422a-45a1-b1d6-33513dfce1db"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>transferUID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createItems - create_Item_demoWSDL</con:sourceStep><con:sourcePath>declare namespace ns0='http://teamcenter.com/Schemas/Core/2006-03/DataManagement';
//ns0:CreateItemsResponse[1]/ns0:output[1]/ns0:item[1]/@uid</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getProperties - get_Item_properties</con:targetStep><con:targetPath>declare namespace dat='http://teamcenter.com/Schemas/Core/2006-03/DataManagement';
//dat:GetPropertiesInput[1]/dat:objects[1]/@uid</con:targetPath><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="6bdba8c2-fade-40de-84cd-5bd5fa09607d" name="getProperties - get_Item_properties"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603DataManagementSoapBinding</con:interface><con:operation>getProperties</con:operation><con:request name="getProperties - get_Item_properties" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ab945af9-d05e-48f0-9f7f-26882f846eae"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-DataManagement</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dat="http://teamcenter.com/Schemas/Core/2006-03/DataManagement" xmlns:base="http://teamcenter.com/Schemas/Soa/2006-03/Base">
   <soapenv:Header/>
   <soapenv:Body>
      <dat:GetPropertiesInput>
         <!--Zero or more repetitions:-->
         <dat:objects uid="wejFNSk55EIq8A" type="Item" classUid="?" className="?" updateDesc="?" objectID="" cParamID="?" isHistorical="?" isObsolete="?" jbt_addition="?">
            <!--Zero or more repetitions:-->
            <base:properties name="?" uiValue="?" modifiable="?">
               <!--Zero or more repetitions:-->
               <base:values value="?" isNull="?"/>
               <!--Zero or more repetitions:-->
               <base:uiValues>?</base:uiValues>
            </base:properties>
            <!--Zero or more repetitions:-->
            <base:uiproperties name="?">
               <!--Zero or more repetitions:-->
               <base:uiValues>?</base:uiValues>
            </base:uiproperties>
            <!--Zero or more repetitions:-->
            <base:props name="">
               <base:value modifiable="?">
                  <!--Zero or more repetitions:-->
                  <base:dbValues>?</base:dbValues>
                  <!--Zero or more repetitions:-->
                  <base:uiValues>?</base:uiValues>
                  <!--Zero or more repetitions:-->
                  <base:isNulls>?</base:isNulls>
               </base:value>
            </base:props>
         </dat:objects>
         <!--Zero or more repetitions:-->
         <dat:attributes>?</dat:attributes>
      </dat:GetPropertiesInput>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7b2063ea-5d2e-4222-ae5e-9c3fed1abeee" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="getProperties"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0a188e26-fef8-4725-b348-050840b98759" name="logout - Logout"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Core0603SessionSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout - Logout" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b985e094-7b77-4a12-ad58-f4ff6c38fbeb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#teamcenter_webtier_url}/Core-2006-03-Session</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ses="http://teamcenter.com/Schemas/Core/2006-03/Session">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ses:LogoutInput/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c09d1bd-1cc8-4a75-8a74-55bab530f90f" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="logout"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>teamcenter_webtier_url</con:name><con:value>http://localhost:7001/tc/services</con:value></con:property><con:property><con:name>teamcenter_user_name</con:name><con:value>infodba</con:value></con:property><con:property><con:name>teamcenter_user_password</con:name><con:value>infodba</con:value></con:property><con:property><con:name>teamcenter_user_group</con:name><con:value>dba</con:value></con:property><con:property><con:name>teamcenter_user_role</con:name><con:value>DBA</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>